
Pyrometer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000c26  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000018  00800060  00000c26  00000c9a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000cb2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ce4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000120  00000000  00000000  00000d20  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000014df  00000000  00000000  00000e40  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009ed  00000000  00000000  0000231f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000b05  00000000  00000000  00002d0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000033c  00000000  00000000  00003814  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005cf  00000000  00000000  00003b50  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000d0a  00000000  00000000  0000411f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000f0  00000000  00000000  00004e29  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e2       	ldi	r30, 0x26	; 38
  68:	fc e0       	ldi	r31, 0x0C	; 12
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 37       	cpi	r26, 0x78	; 120
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 cb 02 	call	0x596	; 0x596 <main>
  7a:	0c 94 11 06 	jmp	0xc22	; 0xc22 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <_LCD_OutNibble>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  82:	80 ff       	sbrs	r24, 0
  84:	02 c0       	rjmp	.+4      	; 0x8a <_LCD_OutNibble+0x8>
  86:	dc 9a       	sbi	0x1b, 4	; 27
  88:	01 c0       	rjmp	.+2      	; 0x8c <_LCD_OutNibble+0xa>
  8a:	dc 98       	cbi	0x1b, 4	; 27
  8c:	81 ff       	sbrs	r24, 1
  8e:	02 c0       	rjmp	.+4      	; 0x94 <_LCD_OutNibble+0x12>
  90:	dd 9a       	sbi	0x1b, 5	; 27
  92:	01 c0       	rjmp	.+2      	; 0x96 <_LCD_OutNibble+0x14>
  94:	dd 98       	cbi	0x1b, 5	; 27
  96:	82 ff       	sbrs	r24, 2
  98:	02 c0       	rjmp	.+4      	; 0x9e <_LCD_OutNibble+0x1c>
  9a:	de 9a       	sbi	0x1b, 6	; 27
  9c:	01 c0       	rjmp	.+2      	; 0xa0 <_LCD_OutNibble+0x1e>
  9e:	de 98       	cbi	0x1b, 6	; 27
  a0:	83 ff       	sbrs	r24, 3
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <_LCD_OutNibble+0x26>
  a4:	df 9a       	sbi	0x1b, 7	; 27
  a6:	08 95       	ret
  a8:	df 98       	cbi	0x1b, 7	; 27
  aa:	08 95       	ret

000000ac <_LCD_InNibble>:
  ac:	89 b3       	in	r24, 0x19	; 25
  ae:	82 95       	swap	r24
  b0:	81 70       	andi	r24, 0x01	; 1
  b2:	cd 99       	sbic	0x19, 5	; 25
  b4:	82 60       	ori	r24, 0x02	; 2
  b6:	ce 99       	sbic	0x19, 6	; 25
  b8:	84 60       	ori	r24, 0x04	; 4
  ba:	cf 99       	sbic	0x19, 7	; 25
  bc:	88 60       	ori	r24, 0x08	; 8
  be:	08 95       	ret

000000c0 <_LCD_Read>:
  c0:	cf 93       	push	r28
  c2:	df 93       	push	r29
  c4:	d4 98       	cbi	0x1a, 4	; 26
  c6:	d5 98       	cbi	0x1a, 5	; 26
  c8:	d6 98       	cbi	0x1a, 6	; 26
  ca:	d7 98       	cbi	0x1a, 7	; 26
  cc:	da 9a       	sbi	0x1b, 2	; 27
  ce:	db 9a       	sbi	0x1b, 3	; 27
  d0:	0e 94 56 00 	call	0xac	; 0xac <_LCD_InNibble>
  d4:	90 e1       	ldi	r25, 0x10	; 16
  d6:	89 9f       	mul	r24, r25
  d8:	e0 01       	movw	r28, r0
  da:	11 24       	eor	r1, r1
  dc:	db 98       	cbi	0x1b, 3	; 27
  de:	db 9a       	sbi	0x1b, 3	; 27
  e0:	0e 94 56 00 	call	0xac	; 0xac <_LCD_InNibble>
  e4:	db 98       	cbi	0x1b, 3	; 27
  e6:	8c 2b       	or	r24, r28
  e8:	df 91       	pop	r29
  ea:	cf 91       	pop	r28
  ec:	08 95       	ret

000000ee <LCD_ReadStatus>:
  ee:	d9 98       	cbi	0x1b, 1	; 27
  f0:	0e 94 60 00 	call	0xc0	; 0xc0 <_LCD_Read>
  f4:	08 95       	ret

000000f6 <_LCD_Write>:
  f6:	cf 93       	push	r28
  f8:	c8 2f       	mov	r28, r24
  fa:	d4 9a       	sbi	0x1a, 4	; 26
  fc:	d5 9a       	sbi	0x1a, 5	; 26
  fe:	d6 9a       	sbi	0x1a, 6	; 26
 100:	d7 9a       	sbi	0x1a, 7	; 26
 102:	da 98       	cbi	0x1b, 2	; 27
 104:	db 9a       	sbi	0x1b, 3	; 27
 106:	82 95       	swap	r24
 108:	8f 70       	andi	r24, 0x0F	; 15
 10a:	0e 94 41 00 	call	0x82	; 0x82 <_LCD_OutNibble>
 10e:	db 98       	cbi	0x1b, 3	; 27
 110:	db 9a       	sbi	0x1b, 3	; 27
 112:	8c 2f       	mov	r24, r28
 114:	0e 94 41 00 	call	0x82	; 0x82 <_LCD_OutNibble>
 118:	db 98       	cbi	0x1b, 3	; 27
 11a:	0e 94 77 00 	call	0xee	; 0xee <LCD_ReadStatus>
 11e:	88 23       	and	r24, r24
 120:	e4 f3       	brlt	.-8      	; 0x11a <_LCD_Write+0x24>
 122:	cf 91       	pop	r28
 124:	08 95       	ret

00000126 <LCD_WriteCommand>:
 126:	d9 98       	cbi	0x1b, 1	; 27
 128:	0e 94 7b 00 	call	0xf6	; 0xf6 <_LCD_Write>
 12c:	08 95       	ret

0000012e <LCD_WriteData>:
 12e:	d9 9a       	sbi	0x1b, 1	; 27
 130:	0e 94 7b 00 	call	0xf6	; 0xf6 <_LCD_Write>
 134:	08 95       	ret

00000136 <LCD_WriteText>:
 136:	cf 93       	push	r28
 138:	df 93       	push	r29
 13a:	ec 01       	movw	r28, r24
 13c:	88 81       	ld	r24, Y
 13e:	88 23       	and	r24, r24
 140:	31 f0       	breq	.+12     	; 0x14e <LCD_WriteText+0x18>
 142:	21 96       	adiw	r28, 0x01	; 1
 144:	0e 94 97 00 	call	0x12e	; 0x12e <LCD_WriteData>
 148:	89 91       	ld	r24, Y+
 14a:	81 11       	cpse	r24, r1
 14c:	fb cf       	rjmp	.-10     	; 0x144 <LCD_WriteText+0xe>
 14e:	df 91       	pop	r29
 150:	cf 91       	pop	r28
 152:	08 95       	ret

00000154 <LCD_GoTo>:
 154:	90 e4       	ldi	r25, 0x40	; 64
 156:	69 9f       	mul	r22, r25
 158:	80 0d       	add	r24, r0
 15a:	11 24       	eor	r1, r1
 15c:	80 68       	ori	r24, 0x80	; 128
 15e:	0e 94 93 00 	call	0x126	; 0x126 <LCD_WriteCommand>
 162:	08 95       	ret

00000164 <LCD_Clear>:
 164:	81 e0       	ldi	r24, 0x01	; 1
 166:	0e 94 93 00 	call	0x126	; 0x126 <LCD_WriteCommand>
 16a:	83 ef       	ldi	r24, 0xF3	; 243
 16c:	91 e0       	ldi	r25, 0x01	; 1
 16e:	01 97       	sbiw	r24, 0x01	; 1
 170:	f1 f7       	brne	.-4      	; 0x16e <LCD_Clear+0xa>
 172:	00 c0       	rjmp	.+0      	; 0x174 <LCD_Clear+0x10>
 174:	00 00       	nop
 176:	08 95       	ret

00000178 <LCD_Initalize>:
 178:	cf 93       	push	r28
 17a:	d4 9a       	sbi	0x1a, 4	; 26
 17c:	d5 9a       	sbi	0x1a, 5	; 26
 17e:	d6 9a       	sbi	0x1a, 6	; 26
 180:	d7 9a       	sbi	0x1a, 7	; 26
 182:	d3 9a       	sbi	0x1a, 3	; 26
 184:	d1 9a       	sbi	0x1a, 1	; 26
 186:	d2 9a       	sbi	0x1a, 2	; 26
 188:	85 ea       	ldi	r24, 0xA5	; 165
 18a:	9e e0       	ldi	r25, 0x0E	; 14
 18c:	01 97       	sbiw	r24, 0x01	; 1
 18e:	f1 f7       	brne	.-4      	; 0x18c <LCD_Initalize+0x14>
 190:	00 c0       	rjmp	.+0      	; 0x192 <LCD_Initalize+0x1a>
 192:	00 00       	nop
 194:	d9 98       	cbi	0x1b, 1	; 27
 196:	db 98       	cbi	0x1b, 3	; 27
 198:	da 98       	cbi	0x1b, 2	; 27
 19a:	c3 e0       	ldi	r28, 0x03	; 3
 19c:	db 9a       	sbi	0x1b, 3	; 27
 19e:	83 e0       	ldi	r24, 0x03	; 3
 1a0:	0e 94 41 00 	call	0x82	; 0x82 <_LCD_OutNibble>
 1a4:	db 98       	cbi	0x1b, 3	; 27
 1a6:	81 ee       	ldi	r24, 0xE1	; 225
 1a8:	94 e0       	ldi	r25, 0x04	; 4
 1aa:	01 97       	sbiw	r24, 0x01	; 1
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <LCD_Initalize+0x32>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <LCD_Initalize+0x38>
 1b0:	00 00       	nop
 1b2:	c1 50       	subi	r28, 0x01	; 1
 1b4:	99 f7       	brne	.-26     	; 0x19c <LCD_Initalize+0x24>
 1b6:	db 9a       	sbi	0x1b, 3	; 27
 1b8:	82 e0       	ldi	r24, 0x02	; 2
 1ba:	0e 94 41 00 	call	0x82	; 0x82 <_LCD_OutNibble>
 1be:	db 98       	cbi	0x1b, 3	; 27
 1c0:	89 ef       	ldi	r24, 0xF9	; 249
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	01 97       	sbiw	r24, 0x01	; 1
 1c6:	f1 f7       	brne	.-4      	; 0x1c4 <LCD_Initalize+0x4c>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <LCD_Initalize+0x52>
 1ca:	00 00       	nop
 1cc:	88 e2       	ldi	r24, 0x28	; 40
 1ce:	0e 94 93 00 	call	0x126	; 0x126 <LCD_WriteCommand>
 1d2:	88 e0       	ldi	r24, 0x08	; 8
 1d4:	0e 94 93 00 	call	0x126	; 0x126 <LCD_WriteCommand>
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	0e 94 93 00 	call	0x126	; 0x126 <LCD_WriteCommand>
 1de:	86 e0       	ldi	r24, 0x06	; 6
 1e0:	0e 94 93 00 	call	0x126	; 0x126 <LCD_WriteCommand>
 1e4:	8c e0       	ldi	r24, 0x0C	; 12
 1e6:	0e 94 93 00 	call	0x126	; 0x126 <LCD_WriteCommand>
 1ea:	cf 91       	pop	r28
 1ec:	08 95       	ret

000001ee <convertDoubleToCharDisplay>:
{
	double xx = *(double*)x, yy = *(double*)y;
	if (xx < yy) return -1;
	if (xx > yy) return  1;
	return 0;
}
 1ee:	4f 92       	push	r4
 1f0:	5f 92       	push	r5
 1f2:	6f 92       	push	r6
 1f4:	7f 92       	push	r7
 1f6:	8f 92       	push	r8
 1f8:	9f 92       	push	r9
 1fa:	af 92       	push	r10
 1fc:	bf 92       	push	r11
 1fe:	cf 92       	push	r12
 200:	df 92       	push	r13
 202:	ef 92       	push	r14
 204:	ff 92       	push	r15
 206:	0f 93       	push	r16
 208:	1f 93       	push	r17
 20a:	cf 93       	push	r28
 20c:	df 93       	push	r29
 20e:	cd b7       	in	r28, 0x3d	; 61
 210:	de b7       	in	r29, 0x3e	; 62
 212:	2f 97       	sbiw	r28, 0x0f	; 15
 214:	0f b6       	in	r0, 0x3f	; 63
 216:	f8 94       	cli
 218:	de bf       	out	0x3e, r29	; 62
 21a:	0f be       	out	0x3f, r0	; 63
 21c:	cd bf       	out	0x3d, r28	; 61
 21e:	2b 01       	movw	r4, r22
 220:	3c 01       	movw	r6, r24
 222:	7a 01       	movw	r14, r20
 224:	87 e0       	ldi	r24, 0x07	; 7
 226:	e0 e6       	ldi	r30, 0x60	; 96
 228:	f0 e0       	ldi	r31, 0x00	; 0
 22a:	de 01       	movw	r26, r28
 22c:	11 96       	adiw	r26, 0x01	; 1
 22e:	01 90       	ld	r0, Z+
 230:	0d 92       	st	X+, r0
 232:	8a 95       	dec	r24
 234:	e1 f7       	brne	.-8      	; 0x22e <convertDoubleToCharDisplay+0x40>
 236:	c3 01       	movw	r24, r6
 238:	b2 01       	movw	r22, r4
 23a:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__fixsfsi>
 23e:	4b 01       	movw	r8, r22
 240:	5c 01       	movw	r10, r24
 242:	8b 01       	movw	r16, r22
 244:	20 e0       	ldi	r18, 0x00	; 0
 246:	30 e0       	ldi	r19, 0x00	; 0
 248:	4a e7       	ldi	r20, 0x7A	; 122
 24a:	54 e4       	ldi	r21, 0x44	; 68
 24c:	c3 01       	movw	r24, r6
 24e:	b2 01       	movw	r22, r4
 250:	0e 94 40 05 	call	0xa80	; 0xa80 <__mulsf3>
 254:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__fixsfsi>
 258:	9b 01       	movw	r18, r22
 25a:	77 23       	and	r23, r23
 25c:	24 f4       	brge	.+8      	; 0x266 <convertDoubleToCharDisplay+0x78>
 25e:	22 27       	eor	r18, r18
 260:	33 27       	eor	r19, r19
 262:	26 1b       	sub	r18, r22
 264:	37 0b       	sbc	r19, r23
 266:	d2 2e       	mov	r13, r18
 268:	c3 2e       	mov	r12, r19
 26a:	21 e3       	ldi	r18, 0x31	; 49
 26c:	32 e3       	ldi	r19, 0x32	; 50
 26e:	39 87       	std	Y+9, r19	; 0x09
 270:	28 87       	std	Y+8, r18	; 0x08
 272:	83 e3       	ldi	r24, 0x33	; 51
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	9b 87       	std	Y+11, r25	; 0x0b
 278:	8a 87       	std	Y+10, r24	; 0x0a
 27a:	3d 87       	std	Y+13, r19	; 0x0d
 27c:	2c 87       	std	Y+12, r18	; 0x0c
 27e:	9f 87       	std	Y+15, r25	; 0x0f
 280:	8e 87       	std	Y+14, r24	; 0x0e
 282:	c4 01       	movw	r24, r8
 284:	11 23       	and	r17, r17
 286:	24 f4       	brge	.+8      	; 0x290 <convertDoubleToCharDisplay+0xa2>
 288:	88 27       	eor	r24, r24
 28a:	99 27       	eor	r25, r25
 28c:	88 19       	sub	r24, r8
 28e:	99 09       	sbc	r25, r9
 290:	5c 01       	movw	r10, r24
 292:	4a e0       	ldi	r20, 0x0A	; 10
 294:	be 01       	movw	r22, r28
 296:	68 5f       	subi	r22, 0xF8	; 248
 298:	7f 4f       	sbci	r23, 0xFF	; 255
 29a:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <__itoa_ncheck>
 29e:	8d 2d       	mov	r24, r13
 2a0:	9c 2d       	mov	r25, r12
 2a2:	68 ee       	ldi	r22, 0xE8	; 232
 2a4:	73 e0       	ldi	r23, 0x03	; 3
 2a6:	0e 94 ad 05 	call	0xb5a	; 0xb5a <__divmodhi4>
 2aa:	4a e0       	ldi	r20, 0x0A	; 10
 2ac:	be 01       	movw	r22, r28
 2ae:	64 5f       	subi	r22, 0xF4	; 244
 2b0:	7f 4f       	sbci	r23, 0xFF	; 255
 2b2:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <__itoa_ncheck>
 2b6:	80 e2       	ldi	r24, 0x20	; 32
 2b8:	89 83       	std	Y+1, r24	; 0x01
 2ba:	8a 83       	std	Y+2, r24	; 0x02
 2bc:	8b 83       	std	Y+3, r24	; 0x03
 2be:	84 e6       	ldi	r24, 0x64	; 100
 2c0:	a8 16       	cp	r10, r24
 2c2:	b1 04       	cpc	r11, r1
 2c4:	5c f0       	brlt	.+22     	; 0x2dc <convertDoubleToCharDisplay+0xee>
 2c6:	88 85       	ldd	r24, Y+8	; 0x08
 2c8:	8a 83       	std	Y+2, r24	; 0x02
 2ca:	89 85       	ldd	r24, Y+9	; 0x09
 2cc:	8b 83       	std	Y+3, r24	; 0x03
 2ce:	8a 85       	ldd	r24, Y+10	; 0x0a
 2d0:	8c 83       	std	Y+4, r24	; 0x04
 2d2:	11 23       	and	r17, r17
 2d4:	b4 f4       	brge	.+44     	; 0x302 <convertDoubleToCharDisplay+0x114>
 2d6:	8d e2       	ldi	r24, 0x2D	; 45
 2d8:	89 83       	std	Y+1, r24	; 0x01
 2da:	13 c0       	rjmp	.+38     	; 0x302 <convertDoubleToCharDisplay+0x114>
 2dc:	8a e0       	ldi	r24, 0x0A	; 10
 2de:	a8 16       	cp	r10, r24
 2e0:	b1 04       	cpc	r11, r1
 2e2:	4c f0       	brlt	.+18     	; 0x2f6 <convertDoubleToCharDisplay+0x108>
 2e4:	88 85       	ldd	r24, Y+8	; 0x08
 2e6:	8b 83       	std	Y+3, r24	; 0x03
 2e8:	89 85       	ldd	r24, Y+9	; 0x09
 2ea:	8c 83       	std	Y+4, r24	; 0x04
 2ec:	bb 20       	and	r11, r11
 2ee:	4c f4       	brge	.+18     	; 0x302 <convertDoubleToCharDisplay+0x114>
 2f0:	8d e2       	ldi	r24, 0x2D	; 45
 2f2:	8a 83       	std	Y+2, r24	; 0x02
 2f4:	06 c0       	rjmp	.+12     	; 0x302 <convertDoubleToCharDisplay+0x114>
 2f6:	88 85       	ldd	r24, Y+8	; 0x08
 2f8:	8c 83       	std	Y+4, r24	; 0x04
 2fa:	bb 20       	and	r11, r11
 2fc:	14 f4       	brge	.+4      	; 0x302 <convertDoubleToCharDisplay+0x114>
 2fe:	8d e2       	ldi	r24, 0x2D	; 45
 300:	8b 83       	std	Y+3, r24	; 0x03
 302:	8e e2       	ldi	r24, 0x2E	; 46
 304:	8d 83       	std	Y+5, r24	; 0x05
 306:	8c 85       	ldd	r24, Y+12	; 0x0c
 308:	8e 83       	std	Y+6, r24	; 0x06
 30a:	8d 85       	ldd	r24, Y+13	; 0x0d
 30c:	8f 83       	std	Y+7, r24	; 0x07
 30e:	be 01       	movw	r22, r28
 310:	6f 5f       	subi	r22, 0xFF	; 255
 312:	7f 4f       	sbci	r23, 0xFF	; 255
 314:	c7 01       	movw	r24, r14
 316:	0e 94 d5 05 	call	0xbaa	; 0xbaa <strcpy>
 31a:	2f 96       	adiw	r28, 0x0f	; 15
 31c:	0f b6       	in	r0, 0x3f	; 63
 31e:	f8 94       	cli
 320:	de bf       	out	0x3e, r29	; 62
 322:	0f be       	out	0x3f, r0	; 63
 324:	cd bf       	out	0x3d, r28	; 61
 326:	df 91       	pop	r29
 328:	cf 91       	pop	r28
 32a:	1f 91       	pop	r17
 32c:	0f 91       	pop	r16
 32e:	ff 90       	pop	r15
 330:	ef 90       	pop	r14
 332:	df 90       	pop	r13
 334:	cf 90       	pop	r12
 336:	bf 90       	pop	r11
 338:	af 90       	pop	r10
 33a:	9f 90       	pop	r9
 33c:	8f 90       	pop	r8
 33e:	7f 90       	pop	r7
 340:	6f 90       	pop	r6
 342:	5f 90       	pop	r5
 344:	4f 90       	pop	r4
 346:	08 95       	ret

00000348 <displayTemperature>:
 348:	cf 93       	push	r28
 34a:	df 93       	push	r29
 34c:	ea 01       	movw	r28, r20
 34e:	0e 94 b2 00 	call	0x164	; 0x164 <LCD_Clear>
 352:	61 e0       	ldi	r22, 0x01	; 1
 354:	80 e0       	ldi	r24, 0x00	; 0
 356:	0e 94 aa 00 	call	0x154	; 0x154 <LCD_GoTo>
 35a:	88 e6       	ldi	r24, 0x68	; 104
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	0e 94 9b 00 	call	0x136	; 0x136 <LCD_WriteText>
 362:	61 e0       	ldi	r22, 0x01	; 1
 364:	88 e0       	ldi	r24, 0x08	; 8
 366:	0e 94 aa 00 	call	0x154	; 0x154 <LCD_GoTo>
 36a:	ce 01       	movw	r24, r28
 36c:	0e 94 9b 00 	call	0x136	; 0x136 <LCD_WriteText>
 370:	61 e0       	ldi	r22, 0x01	; 1
 372:	8f e0       	ldi	r24, 0x0F	; 15
 374:	0e 94 aa 00 	call	0x154	; 0x154 <LCD_GoTo>
 378:	81 e7       	ldi	r24, 0x71	; 113
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	0e 94 9b 00 	call	0x136	; 0x136 <LCD_WriteText>
 380:	87 ea       	ldi	r24, 0xA7	; 167
 382:	91 e6       	ldi	r25, 0x61	; 97
 384:	01 97       	sbiw	r24, 0x01	; 1
 386:	f1 f7       	brne	.-4      	; 0x384 <displayTemperature+0x3c>
 388:	00 c0       	rjmp	.+0      	; 0x38a <displayTemperature+0x42>
 38a:	00 00       	nop
 38c:	df 91       	pop	r29
 38e:	cf 91       	pop	r28
 390:	08 95       	ret

00000392 <getData>:
 392:	ef 92       	push	r14
 394:	ff 92       	push	r15
 396:	0f 93       	push	r16
 398:	1f 93       	push	r17
 39a:	cf 93       	push	r28
 39c:	df 93       	push	r29
 39e:	ec 01       	movw	r28, r24
 3a0:	8c 01       	movw	r16, r24
 3a2:	0c 5a       	subi	r16, 0xAC	; 172
 3a4:	1f 4f       	sbci	r17, 0xFF	; 255
 3a6:	84 eb       	ldi	r24, 0xB4	; 180
 3a8:	0e 94 32 03 	call	0x664	; 0x664 <i2c_start_wait>
 3ac:	87 e0       	ldi	r24, 0x07	; 7
 3ae:	0e 94 59 03 	call	0x6b2	; 0x6b2 <i2c_write>
 3b2:	85 eb       	ldi	r24, 0xB5	; 181
 3b4:	0e 94 50 03 	call	0x6a0	; 0x6a0 <i2c_rep_start>
 3b8:	0e 94 66 03 	call	0x6cc	; 0x6cc <i2c_readAck>
 3bc:	e8 2e       	mov	r14, r24
 3be:	0e 94 66 03 	call	0x6cc	; 0x6cc <i2c_readAck>
 3c2:	f8 2e       	mov	r15, r24
 3c4:	0e 94 6d 03 	call	0x6da	; 0x6da <i2c_readNak>
 3c8:	0e 94 53 03 	call	0x6a6	; 0x6a6 <i2c_stop>
 3cc:	6f 2d       	mov	r22, r15
 3ce:	6f 77       	andi	r22, 0x7F	; 127
 3d0:	70 e0       	ldi	r23, 0x00	; 0
 3d2:	76 2f       	mov	r23, r22
 3d4:	66 27       	eor	r22, r22
 3d6:	6e 0d       	add	r22, r14
 3d8:	71 1d       	adc	r23, r1
 3da:	07 2e       	mov	r0, r23
 3dc:	00 0c       	add	r0, r0
 3de:	88 0b       	sbc	r24, r24
 3e0:	99 0b       	sbc	r25, r25
 3e2:	0e 94 8b 04 	call	0x916	; 0x916 <__floatsisf>
 3e6:	2a e0       	ldi	r18, 0x0A	; 10
 3e8:	37 ed       	ldi	r19, 0xD7	; 215
 3ea:	43 ea       	ldi	r20, 0xA3	; 163
 3ec:	5c e3       	ldi	r21, 0x3C	; 60
 3ee:	0e 94 40 05 	call	0xa80	; 0xa80 <__mulsf3>
 3f2:	23 e3       	ldi	r18, 0x33	; 51
 3f4:	33 e9       	ldi	r19, 0x93	; 147
 3f6:	48 e8       	ldi	r20, 0x88	; 136
 3f8:	53 e4       	ldi	r21, 0x43	; 67
 3fa:	0e 94 74 03 	call	0x6e8	; 0x6e8 <__subsf3>
 3fe:	69 93       	st	Y+, r22
 400:	79 93       	st	Y+, r23
 402:	89 93       	st	Y+, r24
 404:	99 93       	st	Y+, r25
 406:	c0 17       	cp	r28, r16
 408:	d1 07       	cpc	r29, r17
 40a:	69 f6       	brne	.-102    	; 0x3a6 <getData+0x14>
 40c:	df 91       	pop	r29
 40e:	cf 91       	pop	r28
 410:	1f 91       	pop	r17
 412:	0f 91       	pop	r16
 414:	ff 90       	pop	r15
 416:	ef 90       	pop	r14
 418:	08 95       	ret

0000041a <dataProcesing>:
		
void dataProcesing(double Temperatures[21], char *average, char *min,char *max){
 41a:	2f 92       	push	r2
 41c:	3f 92       	push	r3
 41e:	4f 92       	push	r4
 420:	5f 92       	push	r5
 422:	6f 92       	push	r6
 424:	7f 92       	push	r7
 426:	8f 92       	push	r8
 428:	9f 92       	push	r9
 42a:	af 92       	push	r10
 42c:	bf 92       	push	r11
 42e:	cf 92       	push	r12
 430:	df 92       	push	r13
 432:	ef 92       	push	r14
 434:	ff 92       	push	r15
 436:	0f 93       	push	r16
 438:	1f 93       	push	r17
 43a:	cf 93       	push	r28
 43c:	df 93       	push	r29
 43e:	cd b7       	in	r28, 0x3d	; 61
 440:	de b7       	in	r29, 0x3e	; 62
 442:	ce 55       	subi	r28, 0x5E	; 94
 444:	d1 09       	sbc	r29, r1
 446:	0f b6       	in	r0, 0x3f	; 63
 448:	f8 94       	cli
 44a:	de bf       	out	0x3e, r29	; 62
 44c:	0f be       	out	0x3f, r0	; 63
 44e:	cd bf       	out	0x3d, r28	; 61
 450:	7c 01       	movw	r14, r24
 452:	6b 96       	adiw	r28, 0x1b	; 27
 454:	7f af       	std	Y+63, r23	; 0x3f
 456:	6e af       	std	Y+62, r22	; 0x3e
 458:	6b 97       	sbiw	r28, 0x1b	; 27
 45a:	6d 96       	adiw	r28, 0x1d	; 29
 45c:	5f af       	std	Y+63, r21	; 0x3f
 45e:	4e af       	std	Y+62, r20	; 0x3e
 460:	6d 97       	sbiw	r28, 0x1d	; 29
 462:	6f 96       	adiw	r28, 0x1f	; 31
 464:	3f af       	std	Y+63, r19	; 0x3f
 466:	2e af       	std	Y+62, r18	; 0x3e
 468:	6f 97       	sbiw	r28, 0x1f	; 31
 46a:	38 2e       	mov	r3, r24
 46c:	2f 2c       	mov	r2, r15
 46e:	8e 01       	movw	r16, r28
 470:	0f 5f       	subi	r16, 0xFF	; 255
 472:	1f 4f       	sbci	r17, 0xFF	; 255
 474:	5e 01       	movw	r10, r28
 476:	85 e5       	ldi	r24, 0x55	; 85
 478:	a8 0e       	add	r10, r24
 47a:	b1 1c       	adc	r11, r1
 47c:	67 01       	movw	r12, r14
		
	
		double sort[21];
		double averageTMP = 0;
 47e:	60 e0       	ldi	r22, 0x00	; 0
 480:	70 e0       	ldi	r23, 0x00	; 0
 482:	cb 01       	movw	r24, r22
		for(int x = 0; x < 21; ++x){
			sort[x] = Temperatures[x];
 484:	f6 01       	movw	r30, r12
 486:	21 91       	ld	r18, Z+
 488:	31 91       	ld	r19, Z+
 48a:	41 91       	ld	r20, Z+
 48c:	51 91       	ld	r21, Z+
 48e:	6f 01       	movw	r12, r30
 490:	f8 01       	movw	r30, r16
 492:	21 93       	st	Z+, r18
 494:	31 93       	st	Z+, r19
 496:	41 93       	st	Z+, r20
 498:	51 93       	st	Z+, r21
 49a:	8f 01       	movw	r16, r30
			averageTMP += Temperatures[x];
 49c:	0e 94 75 03 	call	0x6ea	; 0x6ea <__addsf3>
void dataProcesing(double Temperatures[21], char *average, char *min,char *max){
		
	
		double sort[21];
		double averageTMP = 0;
		for(int x = 0; x < 21; ++x){
 4a0:	0a 15       	cp	r16, r10
 4a2:	1b 05       	cpc	r17, r11
 4a4:	79 f7       	brne	.-34     	; 0x484 <dataProcesing+0x6a>
			averageTMP += Temperatures[x];
		}
		
		

		averageTMP = averageTMP/20;
 4a6:	20 e0       	ldi	r18, 0x00	; 0
 4a8:	30 e0       	ldi	r19, 0x00	; 0
 4aa:	40 ea       	ldi	r20, 0xA0	; 160
 4ac:	51 e4       	ldi	r21, 0x41	; 65
 4ae:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <__divsf3>
 4b2:	69 96       	adiw	r28, 0x19	; 25
 4b4:	6c af       	std	Y+60, r22	; 0x3c
 4b6:	7d af       	std	Y+61, r23	; 0x3d
 4b8:	8e af       	std	Y+62, r24	; 0x3e
 4ba:	9f af       	std	Y+63, r25	; 0x3f
 4bc:	69 97       	sbiw	r28, 0x19	; 25
 4be:	0f 2e       	mov	r0, r31
 4c0:	f5 e1       	ldi	r31, 0x15	; 21
 4c2:	cf 2e       	mov	r12, r31
 4c4:	d1 2c       	mov	r13, r1
 4c6:	f0 2d       	mov	r31, r0
 4c8:	f0 e5       	ldi	r31, 0x50	; 80
 4ca:	ef 0e       	add	r14, r31
 4cc:	f1 1c       	adc	r15, r1
 4ce:	24 c0       	rjmp	.+72     	; 0x518 <dataProcesing+0xfe>
		
		for(int x = 0; x < 21; ++x)
			for(int y = 0; y < 20; ++y){
				if(Temperatures[y] > Temperatures[y+1]){
 4d0:	f8 01       	movw	r30, r16
 4d2:	81 90       	ld	r8, Z+
 4d4:	91 90       	ld	r9, Z+
 4d6:	a1 90       	ld	r10, Z+
 4d8:	b1 90       	ld	r11, Z+
 4da:	8f 01       	movw	r16, r30
 4dc:	40 80       	ld	r4, Z
 4de:	51 80       	ldd	r5, Z+1	; 0x01
 4e0:	62 80       	ldd	r6, Z+2	; 0x02
 4e2:	73 80       	ldd	r7, Z+3	; 0x03
 4e4:	a3 01       	movw	r20, r6
 4e6:	92 01       	movw	r18, r4
 4e8:	c5 01       	movw	r24, r10
 4ea:	b4 01       	movw	r22, r8
 4ec:	0e 94 3b 05 	call	0xa76	; 0xa76 <__gesf2>
 4f0:	18 16       	cp	r1, r24
 4f2:	5c f4       	brge	.+22     	; 0x50a <dataProcesing+0xf0>
					double tmp = Temperatures[y];
					Temperatures[y] = Temperatures[y + 1];
 4f4:	f8 01       	movw	r30, r16
 4f6:	34 97       	sbiw	r30, 0x04	; 4
 4f8:	40 82       	st	Z, r4
 4fa:	51 82       	std	Z+1, r5	; 0x01
 4fc:	62 82       	std	Z+2, r6	; 0x02
 4fe:	73 82       	std	Z+3, r7	; 0x03
					Temperatures[y + 1]  = tmp;
 500:	f8 01       	movw	r30, r16
 502:	80 82       	st	Z, r8
 504:	91 82       	std	Z+1, r9	; 0x01
 506:	a2 82       	std	Z+2, r10	; 0x02
 508:	b3 82       	std	Z+3, r11	; 0x03
		

		averageTMP = averageTMP/20;
		
		for(int x = 0; x < 21; ++x)
			for(int y = 0; y < 20; ++y){
 50a:	e0 16       	cp	r14, r16
 50c:	f1 06       	cpc	r15, r17
 50e:	01 f7       	brne	.-64     	; 0x4d0 <dataProcesing+0xb6>
 510:	f1 e0       	ldi	r31, 0x01	; 1
 512:	cf 1a       	sub	r12, r31
 514:	d1 08       	sbc	r13, r1
		
		

		averageTMP = averageTMP/20;
		
		for(int x = 0; x < 21; ++x)
 516:	19 f0       	breq	.+6      	; 0x51e <dataProcesing+0x104>
		
void dataProcesing(double Temperatures[21], char *average, char *min,char *max){
		
	
		double sort[21];
		double averageTMP = 0;
 518:	03 2d       	mov	r16, r3
 51a:	12 2d       	mov	r17, r2
 51c:	d9 cf       	rjmp	.-78     	; 0x4d0 <dataProcesing+0xb6>
					Temperatures[y + 1]  = tmp;
				}
		}

	
		convertDoubleToCharDisplay(averageTMP,average);
 51e:	6b 96       	adiw	r28, 0x1b	; 27
 520:	4e ad       	ldd	r20, Y+62	; 0x3e
 522:	5f ad       	ldd	r21, Y+63	; 0x3f
 524:	6b 97       	sbiw	r28, 0x1b	; 27
 526:	69 96       	adiw	r28, 0x19	; 25
 528:	6c ad       	ldd	r22, Y+60	; 0x3c
 52a:	7d ad       	ldd	r23, Y+61	; 0x3d
 52c:	8e ad       	ldd	r24, Y+62	; 0x3e
 52e:	9f ad       	ldd	r25, Y+63	; 0x3f
 530:	69 97       	sbiw	r28, 0x19	; 25
 532:	0e 94 f7 00 	call	0x1ee	; 0x1ee <convertDoubleToCharDisplay>
		convertDoubleToCharDisplay(sort[0],min);
 536:	69 81       	ldd	r22, Y+1	; 0x01
 538:	7a 81       	ldd	r23, Y+2	; 0x02
 53a:	8b 81       	ldd	r24, Y+3	; 0x03
 53c:	9c 81       	ldd	r25, Y+4	; 0x04
 53e:	6d 96       	adiw	r28, 0x1d	; 29
 540:	4e ad       	ldd	r20, Y+62	; 0x3e
 542:	5f ad       	ldd	r21, Y+63	; 0x3f
 544:	6d 97       	sbiw	r28, 0x1d	; 29
 546:	0e 94 f7 00 	call	0x1ee	; 0x1ee <convertDoubleToCharDisplay>
		convertDoubleToCharDisplay(sort[20],max);
 54a:	65 96       	adiw	r28, 0x15	; 21
 54c:	6c ad       	ldd	r22, Y+60	; 0x3c
 54e:	7d ad       	ldd	r23, Y+61	; 0x3d
 550:	8e ad       	ldd	r24, Y+62	; 0x3e
 552:	9f ad       	ldd	r25, Y+63	; 0x3f
 554:	65 97       	sbiw	r28, 0x15	; 21
 556:	6f 96       	adiw	r28, 0x1f	; 31
 558:	4e ad       	ldd	r20, Y+62	; 0x3e
 55a:	5f ad       	ldd	r21, Y+63	; 0x3f
 55c:	6f 97       	sbiw	r28, 0x1f	; 31
 55e:	0e 94 f7 00 	call	0x1ee	; 0x1ee <convertDoubleToCharDisplay>
	 
}
 562:	c2 5a       	subi	r28, 0xA2	; 162
 564:	df 4f       	sbci	r29, 0xFF	; 255
 566:	0f b6       	in	r0, 0x3f	; 63
 568:	f8 94       	cli
 56a:	de bf       	out	0x3e, r29	; 62
 56c:	0f be       	out	0x3f, r0	; 63
 56e:	cd bf       	out	0x3d, r28	; 61
 570:	df 91       	pop	r29
 572:	cf 91       	pop	r28
 574:	1f 91       	pop	r17
 576:	0f 91       	pop	r16
 578:	ff 90       	pop	r15
 57a:	ef 90       	pop	r14
 57c:	df 90       	pop	r13
 57e:	cf 90       	pop	r12
 580:	bf 90       	pop	r11
 582:	af 90       	pop	r10
 584:	9f 90       	pop	r9
 586:	8f 90       	pop	r8
 588:	7f 90       	pop	r7
 58a:	6f 90       	pop	r6
 58c:	5f 90       	pop	r5
 58e:	4f 90       	pop	r4
 590:	3f 90       	pop	r3
 592:	2f 90       	pop	r2
 594:	08 95       	ret

00000596 <main>:

int main(void)
{
 596:	cf 93       	push	r28
 598:	df 93       	push	r29
 59a:	cd b7       	in	r28, 0x3d	; 61
 59c:	de b7       	in	r29, 0x3e	; 62
 59e:	c9 56       	subi	r28, 0x69	; 105
 5a0:	d1 09       	sbc	r29, r1
 5a2:	0f b6       	in	r0, 0x3f	; 63
 5a4:	f8 94       	cli
 5a6:	de bf       	out	0x3e, r29	; 62
 5a8:	0f be       	out	0x3f, r0	; 63
 5aa:	cd bf       	out	0x3d, r28	; 61
		
		LCD_Initalize();
 5ac:	0e 94 bc 00 	call	0x178	; 0x178 <LCD_Initalize>
		LCD_WriteText("INIT");
 5b0:	83 e7       	ldi	r24, 0x73	; 115
 5b2:	90 e0       	ldi	r25, 0x00	; 0
 5b4:	0e 94 9b 00 	call	0x136	; 0x136 <LCD_WriteText>
		i2c_init();  
 5b8:	0e 94 10 03 	call	0x620	; 0x620 <i2c_init>
	
		struct Data dataTemperature;
		double Temperatures[21];
		
		DDRD = _BV(DDD7);
 5bc:	80 e8       	ldi	r24, 0x80	; 128
 5be:	81 bb       	out	0x11, r24	; 17
		PORTD = _BV(PD7);
 5c0:	82 bb       	out	0x12, r24	; 18
		char min[7];
		char max[7];
	while (1)
	{
		
		if(!(PIND & _BV(PIND7)))
 5c2:	87 99       	sbic	0x10, 7	; 16
 5c4:	17 c0       	rjmp	.+46     	; 0x5f4 <main+0x5e>
		{
			getData(Temperatures);
 5c6:	ce 01       	movw	r24, r28
 5c8:	01 96       	adiw	r24, 0x01	; 1
 5ca:	0e 94 c9 01 	call	0x392	; 0x392 <getData>
			dataProcesing(Temperatures,average,min,max);
 5ce:	9e 01       	movw	r18, r28
 5d0:	2d 59       	subi	r18, 0x9D	; 157
 5d2:	3f 4f       	sbci	r19, 0xFF	; 255
 5d4:	ae 01       	movw	r20, r28
 5d6:	44 5a       	subi	r20, 0xA4	; 164
 5d8:	5f 4f       	sbci	r21, 0xFF	; 255
 5da:	be 01       	movw	r22, r28
 5dc:	6b 5a       	subi	r22, 0xAB	; 171
 5de:	7f 4f       	sbci	r23, 0xFF	; 255
 5e0:	ce 01       	movw	r24, r28
 5e2:	01 96       	adiw	r24, 0x01	; 1
 5e4:	0e 94 0d 02 	call	0x41a	; 0x41a <dataProcesing>
 5e8:	87 e8       	ldi	r24, 0x87	; 135
 5ea:	93 e1       	ldi	r25, 0x13	; 19
 5ec:	01 97       	sbiw	r24, 0x01	; 1
 5ee:	f1 f7       	brne	.-4      	; 0x5ec <main+0x56>
 5f0:	00 c0       	rjmp	.+0      	; 0x5f2 <main+0x5c>
 5f2:	00 00       	nop
			_delay_ms(20);
		}

	
		displayTemperature(1,average,min,max);
 5f4:	8e 01       	movw	r16, r28
 5f6:	0d 59       	subi	r16, 0x9D	; 157
 5f8:	1f 4f       	sbci	r17, 0xFF	; 255
 5fa:	9e 01       	movw	r18, r28
 5fc:	24 5a       	subi	r18, 0xA4	; 164
 5fe:	3f 4f       	sbci	r19, 0xFF	; 255
 600:	ae 01       	movw	r20, r28
 602:	4b 5a       	subi	r20, 0xAB	; 171
 604:	5f 4f       	sbci	r21, 0xFF	; 255
 606:	60 e0       	ldi	r22, 0x00	; 0
 608:	70 e0       	ldi	r23, 0x00	; 0
 60a:	80 e8       	ldi	r24, 0x80	; 128
 60c:	9f e3       	ldi	r25, 0x3F	; 63
 60e:	0e 94 a4 01 	call	0x348	; 0x348 <displayTemperature>
 612:	8f e4       	ldi	r24, 0x4F	; 79
 614:	93 ec       	ldi	r25, 0xC3	; 195
 616:	01 97       	sbiw	r24, 0x01	; 1
 618:	f1 f7       	brne	.-4      	; 0x616 <main+0x80>
 61a:	00 c0       	rjmp	.+0      	; 0x61c <main+0x86>
 61c:	00 00       	nop
 61e:	d1 cf       	rjmp	.-94     	; 0x5c2 <main+0x2c>

00000620 <i2c_init>:
 620:	11 b8       	out	0x01, r1	; 1
 622:	82 e0       	ldi	r24, 0x02	; 2
 624:	80 b9       	out	0x00, r24	; 0
 626:	08 95       	ret

00000628 <i2c_start>:
 628:	94 ea       	ldi	r25, 0xA4	; 164
 62a:	96 bf       	out	0x36, r25	; 54
 62c:	06 b6       	in	r0, 0x36	; 54
 62e:	07 fe       	sbrs	r0, 7
 630:	fd cf       	rjmp	.-6      	; 0x62c <i2c_start+0x4>
 632:	91 b1       	in	r25, 0x01	; 1
 634:	98 7f       	andi	r25, 0xF8	; 248
 636:	98 30       	cpi	r25, 0x08	; 8
 638:	11 f0       	breq	.+4      	; 0x63e <i2c_start+0x16>
 63a:	90 31       	cpi	r25, 0x10	; 16
 63c:	79 f4       	brne	.+30     	; 0x65c <i2c_start+0x34>
 63e:	83 b9       	out	0x03, r24	; 3
 640:	84 e8       	ldi	r24, 0x84	; 132
 642:	86 bf       	out	0x36, r24	; 54
 644:	06 b6       	in	r0, 0x36	; 54
 646:	07 fe       	sbrs	r0, 7
 648:	fd cf       	rjmp	.-6      	; 0x644 <i2c_start+0x1c>
 64a:	91 b1       	in	r25, 0x01	; 1
 64c:	98 7f       	andi	r25, 0xF8	; 248
 64e:	98 31       	cpi	r25, 0x18	; 24
 650:	39 f0       	breq	.+14     	; 0x660 <i2c_start+0x38>
 652:	81 e0       	ldi	r24, 0x01	; 1
 654:	90 34       	cpi	r25, 0x40	; 64
 656:	29 f4       	brne	.+10     	; 0x662 <i2c_start+0x3a>
 658:	80 e0       	ldi	r24, 0x00	; 0
 65a:	08 95       	ret
 65c:	81 e0       	ldi	r24, 0x01	; 1
 65e:	08 95       	ret
 660:	80 e0       	ldi	r24, 0x00	; 0
 662:	08 95       	ret

00000664 <i2c_start_wait>:
 664:	24 ea       	ldi	r18, 0xA4	; 164
 666:	34 e8       	ldi	r19, 0x84	; 132
 668:	44 e9       	ldi	r20, 0x94	; 148
 66a:	26 bf       	out	0x36, r18	; 54
 66c:	06 b6       	in	r0, 0x36	; 54
 66e:	07 fe       	sbrs	r0, 7
 670:	fd cf       	rjmp	.-6      	; 0x66c <i2c_start_wait+0x8>
 672:	91 b1       	in	r25, 0x01	; 1
 674:	98 7f       	andi	r25, 0xF8	; 248
 676:	98 30       	cpi	r25, 0x08	; 8
 678:	11 f0       	breq	.+4      	; 0x67e <i2c_start_wait+0x1a>
 67a:	90 31       	cpi	r25, 0x10	; 16
 67c:	b1 f7       	brne	.-20     	; 0x66a <i2c_start_wait+0x6>
 67e:	83 b9       	out	0x03, r24	; 3
 680:	36 bf       	out	0x36, r19	; 54
 682:	06 b6       	in	r0, 0x36	; 54
 684:	07 fe       	sbrs	r0, 7
 686:	fd cf       	rjmp	.-6      	; 0x682 <i2c_start_wait+0x1e>
 688:	91 b1       	in	r25, 0x01	; 1
 68a:	98 7f       	andi	r25, 0xF8	; 248
 68c:	90 32       	cpi	r25, 0x20	; 32
 68e:	11 f0       	breq	.+4      	; 0x694 <i2c_start_wait+0x30>
 690:	98 35       	cpi	r25, 0x58	; 88
 692:	29 f4       	brne	.+10     	; 0x69e <i2c_start_wait+0x3a>
 694:	46 bf       	out	0x36, r20	; 54
 696:	06 b6       	in	r0, 0x36	; 54
 698:	04 fc       	sbrc	r0, 4
 69a:	fd cf       	rjmp	.-6      	; 0x696 <i2c_start_wait+0x32>
 69c:	e6 cf       	rjmp	.-52     	; 0x66a <i2c_start_wait+0x6>
 69e:	08 95       	ret

000006a0 <i2c_rep_start>:
 6a0:	0e 94 14 03 	call	0x628	; 0x628 <i2c_start>
 6a4:	08 95       	ret

000006a6 <i2c_stop>:
 6a6:	84 e9       	ldi	r24, 0x94	; 148
 6a8:	86 bf       	out	0x36, r24	; 54
 6aa:	06 b6       	in	r0, 0x36	; 54
 6ac:	04 fc       	sbrc	r0, 4
 6ae:	fd cf       	rjmp	.-6      	; 0x6aa <i2c_stop+0x4>
 6b0:	08 95       	ret

000006b2 <i2c_write>:
 6b2:	83 b9       	out	0x03, r24	; 3
 6b4:	84 e8       	ldi	r24, 0x84	; 132
 6b6:	86 bf       	out	0x36, r24	; 54
 6b8:	06 b6       	in	r0, 0x36	; 54
 6ba:	07 fe       	sbrs	r0, 7
 6bc:	fd cf       	rjmp	.-6      	; 0x6b8 <i2c_write+0x6>
 6be:	91 b1       	in	r25, 0x01	; 1
 6c0:	98 7f       	andi	r25, 0xF8	; 248
 6c2:	81 e0       	ldi	r24, 0x01	; 1
 6c4:	98 32       	cpi	r25, 0x28	; 40
 6c6:	09 f4       	brne	.+2      	; 0x6ca <i2c_write+0x18>
 6c8:	80 e0       	ldi	r24, 0x00	; 0
 6ca:	08 95       	ret

000006cc <i2c_readAck>:
 6cc:	84 ec       	ldi	r24, 0xC4	; 196
 6ce:	86 bf       	out	0x36, r24	; 54
 6d0:	06 b6       	in	r0, 0x36	; 54
 6d2:	07 fe       	sbrs	r0, 7
 6d4:	fd cf       	rjmp	.-6      	; 0x6d0 <i2c_readAck+0x4>
 6d6:	83 b1       	in	r24, 0x03	; 3
 6d8:	08 95       	ret

000006da <i2c_readNak>:
 6da:	84 e8       	ldi	r24, 0x84	; 132
 6dc:	86 bf       	out	0x36, r24	; 54
 6de:	06 b6       	in	r0, 0x36	; 54
 6e0:	07 fe       	sbrs	r0, 7
 6e2:	fd cf       	rjmp	.-6      	; 0x6de <i2c_readNak+0x4>
 6e4:	83 b1       	in	r24, 0x03	; 3
 6e6:	08 95       	ret

000006e8 <__subsf3>:
 6e8:	50 58       	subi	r21, 0x80	; 128

000006ea <__addsf3>:
 6ea:	bb 27       	eor	r27, r27
 6ec:	aa 27       	eor	r26, r26
 6ee:	0e 94 8c 03 	call	0x718	; 0x718 <__addsf3x>
 6f2:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__fp_round>
 6f6:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <__fp_pscA>
 6fa:	38 f0       	brcs	.+14     	; 0x70a <__addsf3+0x20>
 6fc:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <__fp_pscB>
 700:	20 f0       	brcs	.+8      	; 0x70a <__addsf3+0x20>
 702:	39 f4       	brne	.+14     	; 0x712 <__addsf3+0x28>
 704:	9f 3f       	cpi	r25, 0xFF	; 255
 706:	19 f4       	brne	.+6      	; 0x70e <__addsf3+0x24>
 708:	26 f4       	brtc	.+8      	; 0x712 <__addsf3+0x28>
 70a:	0c 94 f0 04 	jmp	0x9e0	; 0x9e0 <__fp_nan>
 70e:	0e f4       	brtc	.+2      	; 0x712 <__addsf3+0x28>
 710:	e0 95       	com	r30
 712:	e7 fb       	bst	r30, 7
 714:	0c 94 ea 04 	jmp	0x9d4	; 0x9d4 <__fp_inf>

00000718 <__addsf3x>:
 718:	e9 2f       	mov	r30, r25
 71a:	0e 94 12 05 	call	0xa24	; 0xa24 <__fp_split3>
 71e:	58 f3       	brcs	.-42     	; 0x6f6 <__addsf3+0xc>
 720:	ba 17       	cp	r27, r26
 722:	62 07       	cpc	r22, r18
 724:	73 07       	cpc	r23, r19
 726:	84 07       	cpc	r24, r20
 728:	95 07       	cpc	r25, r21
 72a:	20 f0       	brcs	.+8      	; 0x734 <__addsf3x+0x1c>
 72c:	79 f4       	brne	.+30     	; 0x74c <__addsf3x+0x34>
 72e:	a6 f5       	brtc	.+104    	; 0x798 <__addsf3x+0x80>
 730:	0c 94 34 05 	jmp	0xa68	; 0xa68 <__fp_zero>
 734:	0e f4       	brtc	.+2      	; 0x738 <__addsf3x+0x20>
 736:	e0 95       	com	r30
 738:	0b 2e       	mov	r0, r27
 73a:	ba 2f       	mov	r27, r26
 73c:	a0 2d       	mov	r26, r0
 73e:	0b 01       	movw	r0, r22
 740:	b9 01       	movw	r22, r18
 742:	90 01       	movw	r18, r0
 744:	0c 01       	movw	r0, r24
 746:	ca 01       	movw	r24, r20
 748:	a0 01       	movw	r20, r0
 74a:	11 24       	eor	r1, r1
 74c:	ff 27       	eor	r31, r31
 74e:	59 1b       	sub	r21, r25
 750:	99 f0       	breq	.+38     	; 0x778 <__addsf3x+0x60>
 752:	59 3f       	cpi	r21, 0xF9	; 249
 754:	50 f4       	brcc	.+20     	; 0x76a <__addsf3x+0x52>
 756:	50 3e       	cpi	r21, 0xE0	; 224
 758:	68 f1       	brcs	.+90     	; 0x7b4 <__addsf3x+0x9c>
 75a:	1a 16       	cp	r1, r26
 75c:	f0 40       	sbci	r31, 0x00	; 0
 75e:	a2 2f       	mov	r26, r18
 760:	23 2f       	mov	r18, r19
 762:	34 2f       	mov	r19, r20
 764:	44 27       	eor	r20, r20
 766:	58 5f       	subi	r21, 0xF8	; 248
 768:	f3 cf       	rjmp	.-26     	; 0x750 <__addsf3x+0x38>
 76a:	46 95       	lsr	r20
 76c:	37 95       	ror	r19
 76e:	27 95       	ror	r18
 770:	a7 95       	ror	r26
 772:	f0 40       	sbci	r31, 0x00	; 0
 774:	53 95       	inc	r21
 776:	c9 f7       	brne	.-14     	; 0x76a <__addsf3x+0x52>
 778:	7e f4       	brtc	.+30     	; 0x798 <__addsf3x+0x80>
 77a:	1f 16       	cp	r1, r31
 77c:	ba 0b       	sbc	r27, r26
 77e:	62 0b       	sbc	r22, r18
 780:	73 0b       	sbc	r23, r19
 782:	84 0b       	sbc	r24, r20
 784:	ba f0       	brmi	.+46     	; 0x7b4 <__addsf3x+0x9c>
 786:	91 50       	subi	r25, 0x01	; 1
 788:	a1 f0       	breq	.+40     	; 0x7b2 <__addsf3x+0x9a>
 78a:	ff 0f       	add	r31, r31
 78c:	bb 1f       	adc	r27, r27
 78e:	66 1f       	adc	r22, r22
 790:	77 1f       	adc	r23, r23
 792:	88 1f       	adc	r24, r24
 794:	c2 f7       	brpl	.-16     	; 0x786 <__addsf3x+0x6e>
 796:	0e c0       	rjmp	.+28     	; 0x7b4 <__addsf3x+0x9c>
 798:	ba 0f       	add	r27, r26
 79a:	62 1f       	adc	r22, r18
 79c:	73 1f       	adc	r23, r19
 79e:	84 1f       	adc	r24, r20
 7a0:	48 f4       	brcc	.+18     	; 0x7b4 <__addsf3x+0x9c>
 7a2:	87 95       	ror	r24
 7a4:	77 95       	ror	r23
 7a6:	67 95       	ror	r22
 7a8:	b7 95       	ror	r27
 7aa:	f7 95       	ror	r31
 7ac:	9e 3f       	cpi	r25, 0xFE	; 254
 7ae:	08 f0       	brcs	.+2      	; 0x7b2 <__addsf3x+0x9a>
 7b0:	b0 cf       	rjmp	.-160    	; 0x712 <__addsf3+0x28>
 7b2:	93 95       	inc	r25
 7b4:	88 0f       	add	r24, r24
 7b6:	08 f0       	brcs	.+2      	; 0x7ba <__addsf3x+0xa2>
 7b8:	99 27       	eor	r25, r25
 7ba:	ee 0f       	add	r30, r30
 7bc:	97 95       	ror	r25
 7be:	87 95       	ror	r24
 7c0:	08 95       	ret

000007c2 <__divsf3>:
 7c2:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__divsf3x>
 7c6:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__fp_round>
 7ca:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <__fp_pscB>
 7ce:	58 f0       	brcs	.+22     	; 0x7e6 <__divsf3+0x24>
 7d0:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <__fp_pscA>
 7d4:	40 f0       	brcs	.+16     	; 0x7e6 <__divsf3+0x24>
 7d6:	29 f4       	brne	.+10     	; 0x7e2 <__divsf3+0x20>
 7d8:	5f 3f       	cpi	r21, 0xFF	; 255
 7da:	29 f0       	breq	.+10     	; 0x7e6 <__divsf3+0x24>
 7dc:	0c 94 ea 04 	jmp	0x9d4	; 0x9d4 <__fp_inf>
 7e0:	51 11       	cpse	r21, r1
 7e2:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__fp_szero>
 7e6:	0c 94 f0 04 	jmp	0x9e0	; 0x9e0 <__fp_nan>

000007ea <__divsf3x>:
 7ea:	0e 94 12 05 	call	0xa24	; 0xa24 <__fp_split3>
 7ee:	68 f3       	brcs	.-38     	; 0x7ca <__divsf3+0x8>

000007f0 <__divsf3_pse>:
 7f0:	99 23       	and	r25, r25
 7f2:	b1 f3       	breq	.-20     	; 0x7e0 <__divsf3+0x1e>
 7f4:	55 23       	and	r21, r21
 7f6:	91 f3       	breq	.-28     	; 0x7dc <__divsf3+0x1a>
 7f8:	95 1b       	sub	r25, r21
 7fa:	55 0b       	sbc	r21, r21
 7fc:	bb 27       	eor	r27, r27
 7fe:	aa 27       	eor	r26, r26
 800:	62 17       	cp	r22, r18
 802:	73 07       	cpc	r23, r19
 804:	84 07       	cpc	r24, r20
 806:	38 f0       	brcs	.+14     	; 0x816 <__divsf3_pse+0x26>
 808:	9f 5f       	subi	r25, 0xFF	; 255
 80a:	5f 4f       	sbci	r21, 0xFF	; 255
 80c:	22 0f       	add	r18, r18
 80e:	33 1f       	adc	r19, r19
 810:	44 1f       	adc	r20, r20
 812:	aa 1f       	adc	r26, r26
 814:	a9 f3       	breq	.-22     	; 0x800 <__divsf3_pse+0x10>
 816:	35 d0       	rcall	.+106    	; 0x882 <__stack+0x23>
 818:	0e 2e       	mov	r0, r30
 81a:	3a f0       	brmi	.+14     	; 0x82a <__divsf3_pse+0x3a>
 81c:	e0 e8       	ldi	r30, 0x80	; 128
 81e:	32 d0       	rcall	.+100    	; 0x884 <__stack+0x25>
 820:	91 50       	subi	r25, 0x01	; 1
 822:	50 40       	sbci	r21, 0x00	; 0
 824:	e6 95       	lsr	r30
 826:	00 1c       	adc	r0, r0
 828:	ca f7       	brpl	.-14     	; 0x81c <__divsf3_pse+0x2c>
 82a:	2b d0       	rcall	.+86     	; 0x882 <__stack+0x23>
 82c:	fe 2f       	mov	r31, r30
 82e:	29 d0       	rcall	.+82     	; 0x882 <__stack+0x23>
 830:	66 0f       	add	r22, r22
 832:	77 1f       	adc	r23, r23
 834:	88 1f       	adc	r24, r24
 836:	bb 1f       	adc	r27, r27
 838:	26 17       	cp	r18, r22
 83a:	37 07       	cpc	r19, r23
 83c:	48 07       	cpc	r20, r24
 83e:	ab 07       	cpc	r26, r27
 840:	b0 e8       	ldi	r27, 0x80	; 128
 842:	09 f0       	breq	.+2      	; 0x846 <__divsf3_pse+0x56>
 844:	bb 0b       	sbc	r27, r27
 846:	80 2d       	mov	r24, r0
 848:	bf 01       	movw	r22, r30
 84a:	ff 27       	eor	r31, r31
 84c:	93 58       	subi	r25, 0x83	; 131
 84e:	5f 4f       	sbci	r21, 0xFF	; 255
 850:	3a f0       	brmi	.+14     	; 0x860 <__stack+0x1>
 852:	9e 3f       	cpi	r25, 0xFE	; 254
 854:	51 05       	cpc	r21, r1
 856:	78 f0       	brcs	.+30     	; 0x876 <__stack+0x17>
 858:	0c 94 ea 04 	jmp	0x9d4	; 0x9d4 <__fp_inf>
 85c:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__fp_szero>
 860:	5f 3f       	cpi	r21, 0xFF	; 255
 862:	e4 f3       	brlt	.-8      	; 0x85c <__divsf3_pse+0x6c>
 864:	98 3e       	cpi	r25, 0xE8	; 232
 866:	d4 f3       	brlt	.-12     	; 0x85c <__divsf3_pse+0x6c>
 868:	86 95       	lsr	r24
 86a:	77 95       	ror	r23
 86c:	67 95       	ror	r22
 86e:	b7 95       	ror	r27
 870:	f7 95       	ror	r31
 872:	9f 5f       	subi	r25, 0xFF	; 255
 874:	c9 f7       	brne	.-14     	; 0x868 <__stack+0x9>
 876:	88 0f       	add	r24, r24
 878:	91 1d       	adc	r25, r1
 87a:	96 95       	lsr	r25
 87c:	87 95       	ror	r24
 87e:	97 f9       	bld	r25, 7
 880:	08 95       	ret
 882:	e1 e0       	ldi	r30, 0x01	; 1
 884:	66 0f       	add	r22, r22
 886:	77 1f       	adc	r23, r23
 888:	88 1f       	adc	r24, r24
 88a:	bb 1f       	adc	r27, r27
 88c:	62 17       	cp	r22, r18
 88e:	73 07       	cpc	r23, r19
 890:	84 07       	cpc	r24, r20
 892:	ba 07       	cpc	r27, r26
 894:	20 f0       	brcs	.+8      	; 0x89e <__stack+0x3f>
 896:	62 1b       	sub	r22, r18
 898:	73 0b       	sbc	r23, r19
 89a:	84 0b       	sbc	r24, r20
 89c:	ba 0b       	sbc	r27, r26
 89e:	ee 1f       	adc	r30, r30
 8a0:	88 f7       	brcc	.-30     	; 0x884 <__stack+0x25>
 8a2:	e0 95       	com	r30
 8a4:	08 95       	ret

000008a6 <__fixsfsi>:
 8a6:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <__fixunssfsi>
 8aa:	68 94       	set
 8ac:	b1 11       	cpse	r27, r1
 8ae:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__fp_szero>
 8b2:	08 95       	ret

000008b4 <__fixunssfsi>:
 8b4:	0e 94 1a 05 	call	0xa34	; 0xa34 <__fp_splitA>
 8b8:	88 f0       	brcs	.+34     	; 0x8dc <__fixunssfsi+0x28>
 8ba:	9f 57       	subi	r25, 0x7F	; 127
 8bc:	98 f0       	brcs	.+38     	; 0x8e4 <__fixunssfsi+0x30>
 8be:	b9 2f       	mov	r27, r25
 8c0:	99 27       	eor	r25, r25
 8c2:	b7 51       	subi	r27, 0x17	; 23
 8c4:	b0 f0       	brcs	.+44     	; 0x8f2 <__fixunssfsi+0x3e>
 8c6:	e1 f0       	breq	.+56     	; 0x900 <__fixunssfsi+0x4c>
 8c8:	66 0f       	add	r22, r22
 8ca:	77 1f       	adc	r23, r23
 8cc:	88 1f       	adc	r24, r24
 8ce:	99 1f       	adc	r25, r25
 8d0:	1a f0       	brmi	.+6      	; 0x8d8 <__fixunssfsi+0x24>
 8d2:	ba 95       	dec	r27
 8d4:	c9 f7       	brne	.-14     	; 0x8c8 <__fixunssfsi+0x14>
 8d6:	14 c0       	rjmp	.+40     	; 0x900 <__fixunssfsi+0x4c>
 8d8:	b1 30       	cpi	r27, 0x01	; 1
 8da:	91 f0       	breq	.+36     	; 0x900 <__fixunssfsi+0x4c>
 8dc:	0e 94 34 05 	call	0xa68	; 0xa68 <__fp_zero>
 8e0:	b1 e0       	ldi	r27, 0x01	; 1
 8e2:	08 95       	ret
 8e4:	0c 94 34 05 	jmp	0xa68	; 0xa68 <__fp_zero>
 8e8:	67 2f       	mov	r22, r23
 8ea:	78 2f       	mov	r23, r24
 8ec:	88 27       	eor	r24, r24
 8ee:	b8 5f       	subi	r27, 0xF8	; 248
 8f0:	39 f0       	breq	.+14     	; 0x900 <__fixunssfsi+0x4c>
 8f2:	b9 3f       	cpi	r27, 0xF9	; 249
 8f4:	cc f3       	brlt	.-14     	; 0x8e8 <__fixunssfsi+0x34>
 8f6:	86 95       	lsr	r24
 8f8:	77 95       	ror	r23
 8fa:	67 95       	ror	r22
 8fc:	b3 95       	inc	r27
 8fe:	d9 f7       	brne	.-10     	; 0x8f6 <__fixunssfsi+0x42>
 900:	3e f4       	brtc	.+14     	; 0x910 <__fixunssfsi+0x5c>
 902:	90 95       	com	r25
 904:	80 95       	com	r24
 906:	70 95       	com	r23
 908:	61 95       	neg	r22
 90a:	7f 4f       	sbci	r23, 0xFF	; 255
 90c:	8f 4f       	sbci	r24, 0xFF	; 255
 90e:	9f 4f       	sbci	r25, 0xFF	; 255
 910:	08 95       	ret

00000912 <__floatunsisf>:
 912:	e8 94       	clt
 914:	09 c0       	rjmp	.+18     	; 0x928 <__floatsisf+0x12>

00000916 <__floatsisf>:
 916:	97 fb       	bst	r25, 7
 918:	3e f4       	brtc	.+14     	; 0x928 <__floatsisf+0x12>
 91a:	90 95       	com	r25
 91c:	80 95       	com	r24
 91e:	70 95       	com	r23
 920:	61 95       	neg	r22
 922:	7f 4f       	sbci	r23, 0xFF	; 255
 924:	8f 4f       	sbci	r24, 0xFF	; 255
 926:	9f 4f       	sbci	r25, 0xFF	; 255
 928:	99 23       	and	r25, r25
 92a:	a9 f0       	breq	.+42     	; 0x956 <__floatsisf+0x40>
 92c:	f9 2f       	mov	r31, r25
 92e:	96 e9       	ldi	r25, 0x96	; 150
 930:	bb 27       	eor	r27, r27
 932:	93 95       	inc	r25
 934:	f6 95       	lsr	r31
 936:	87 95       	ror	r24
 938:	77 95       	ror	r23
 93a:	67 95       	ror	r22
 93c:	b7 95       	ror	r27
 93e:	f1 11       	cpse	r31, r1
 940:	f8 cf       	rjmp	.-16     	; 0x932 <__floatsisf+0x1c>
 942:	fa f4       	brpl	.+62     	; 0x982 <__floatsisf+0x6c>
 944:	bb 0f       	add	r27, r27
 946:	11 f4       	brne	.+4      	; 0x94c <__floatsisf+0x36>
 948:	60 ff       	sbrs	r22, 0
 94a:	1b c0       	rjmp	.+54     	; 0x982 <__floatsisf+0x6c>
 94c:	6f 5f       	subi	r22, 0xFF	; 255
 94e:	7f 4f       	sbci	r23, 0xFF	; 255
 950:	8f 4f       	sbci	r24, 0xFF	; 255
 952:	9f 4f       	sbci	r25, 0xFF	; 255
 954:	16 c0       	rjmp	.+44     	; 0x982 <__floatsisf+0x6c>
 956:	88 23       	and	r24, r24
 958:	11 f0       	breq	.+4      	; 0x95e <__floatsisf+0x48>
 95a:	96 e9       	ldi	r25, 0x96	; 150
 95c:	11 c0       	rjmp	.+34     	; 0x980 <__floatsisf+0x6a>
 95e:	77 23       	and	r23, r23
 960:	21 f0       	breq	.+8      	; 0x96a <__floatsisf+0x54>
 962:	9e e8       	ldi	r25, 0x8E	; 142
 964:	87 2f       	mov	r24, r23
 966:	76 2f       	mov	r23, r22
 968:	05 c0       	rjmp	.+10     	; 0x974 <__floatsisf+0x5e>
 96a:	66 23       	and	r22, r22
 96c:	71 f0       	breq	.+28     	; 0x98a <__floatsisf+0x74>
 96e:	96 e8       	ldi	r25, 0x86	; 134
 970:	86 2f       	mov	r24, r22
 972:	70 e0       	ldi	r23, 0x00	; 0
 974:	60 e0       	ldi	r22, 0x00	; 0
 976:	2a f0       	brmi	.+10     	; 0x982 <__floatsisf+0x6c>
 978:	9a 95       	dec	r25
 97a:	66 0f       	add	r22, r22
 97c:	77 1f       	adc	r23, r23
 97e:	88 1f       	adc	r24, r24
 980:	da f7       	brpl	.-10     	; 0x978 <__floatsisf+0x62>
 982:	88 0f       	add	r24, r24
 984:	96 95       	lsr	r25
 986:	87 95       	ror	r24
 988:	97 f9       	bld	r25, 7
 98a:	08 95       	ret

0000098c <__fp_cmp>:
 98c:	99 0f       	add	r25, r25
 98e:	00 08       	sbc	r0, r0
 990:	55 0f       	add	r21, r21
 992:	aa 0b       	sbc	r26, r26
 994:	e0 e8       	ldi	r30, 0x80	; 128
 996:	fe ef       	ldi	r31, 0xFE	; 254
 998:	16 16       	cp	r1, r22
 99a:	17 06       	cpc	r1, r23
 99c:	e8 07       	cpc	r30, r24
 99e:	f9 07       	cpc	r31, r25
 9a0:	c0 f0       	brcs	.+48     	; 0x9d2 <__fp_cmp+0x46>
 9a2:	12 16       	cp	r1, r18
 9a4:	13 06       	cpc	r1, r19
 9a6:	e4 07       	cpc	r30, r20
 9a8:	f5 07       	cpc	r31, r21
 9aa:	98 f0       	brcs	.+38     	; 0x9d2 <__fp_cmp+0x46>
 9ac:	62 1b       	sub	r22, r18
 9ae:	73 0b       	sbc	r23, r19
 9b0:	84 0b       	sbc	r24, r20
 9b2:	95 0b       	sbc	r25, r21
 9b4:	39 f4       	brne	.+14     	; 0x9c4 <__fp_cmp+0x38>
 9b6:	0a 26       	eor	r0, r26
 9b8:	61 f0       	breq	.+24     	; 0x9d2 <__fp_cmp+0x46>
 9ba:	23 2b       	or	r18, r19
 9bc:	24 2b       	or	r18, r20
 9be:	25 2b       	or	r18, r21
 9c0:	21 f4       	brne	.+8      	; 0x9ca <__fp_cmp+0x3e>
 9c2:	08 95       	ret
 9c4:	0a 26       	eor	r0, r26
 9c6:	09 f4       	brne	.+2      	; 0x9ca <__fp_cmp+0x3e>
 9c8:	a1 40       	sbci	r26, 0x01	; 1
 9ca:	a6 95       	lsr	r26
 9cc:	8f ef       	ldi	r24, 0xFF	; 255
 9ce:	81 1d       	adc	r24, r1
 9d0:	81 1d       	adc	r24, r1
 9d2:	08 95       	ret

000009d4 <__fp_inf>:
 9d4:	97 f9       	bld	r25, 7
 9d6:	9f 67       	ori	r25, 0x7F	; 127
 9d8:	80 e8       	ldi	r24, 0x80	; 128
 9da:	70 e0       	ldi	r23, 0x00	; 0
 9dc:	60 e0       	ldi	r22, 0x00	; 0
 9de:	08 95       	ret

000009e0 <__fp_nan>:
 9e0:	9f ef       	ldi	r25, 0xFF	; 255
 9e2:	80 ec       	ldi	r24, 0xC0	; 192
 9e4:	08 95       	ret

000009e6 <__fp_pscA>:
 9e6:	00 24       	eor	r0, r0
 9e8:	0a 94       	dec	r0
 9ea:	16 16       	cp	r1, r22
 9ec:	17 06       	cpc	r1, r23
 9ee:	18 06       	cpc	r1, r24
 9f0:	09 06       	cpc	r0, r25
 9f2:	08 95       	ret

000009f4 <__fp_pscB>:
 9f4:	00 24       	eor	r0, r0
 9f6:	0a 94       	dec	r0
 9f8:	12 16       	cp	r1, r18
 9fa:	13 06       	cpc	r1, r19
 9fc:	14 06       	cpc	r1, r20
 9fe:	05 06       	cpc	r0, r21
 a00:	08 95       	ret

00000a02 <__fp_round>:
 a02:	09 2e       	mov	r0, r25
 a04:	03 94       	inc	r0
 a06:	00 0c       	add	r0, r0
 a08:	11 f4       	brne	.+4      	; 0xa0e <__fp_round+0xc>
 a0a:	88 23       	and	r24, r24
 a0c:	52 f0       	brmi	.+20     	; 0xa22 <__fp_round+0x20>
 a0e:	bb 0f       	add	r27, r27
 a10:	40 f4       	brcc	.+16     	; 0xa22 <__fp_round+0x20>
 a12:	bf 2b       	or	r27, r31
 a14:	11 f4       	brne	.+4      	; 0xa1a <__fp_round+0x18>
 a16:	60 ff       	sbrs	r22, 0
 a18:	04 c0       	rjmp	.+8      	; 0xa22 <__fp_round+0x20>
 a1a:	6f 5f       	subi	r22, 0xFF	; 255
 a1c:	7f 4f       	sbci	r23, 0xFF	; 255
 a1e:	8f 4f       	sbci	r24, 0xFF	; 255
 a20:	9f 4f       	sbci	r25, 0xFF	; 255
 a22:	08 95       	ret

00000a24 <__fp_split3>:
 a24:	57 fd       	sbrc	r21, 7
 a26:	90 58       	subi	r25, 0x80	; 128
 a28:	44 0f       	add	r20, r20
 a2a:	55 1f       	adc	r21, r21
 a2c:	59 f0       	breq	.+22     	; 0xa44 <__fp_splitA+0x10>
 a2e:	5f 3f       	cpi	r21, 0xFF	; 255
 a30:	71 f0       	breq	.+28     	; 0xa4e <__fp_splitA+0x1a>
 a32:	47 95       	ror	r20

00000a34 <__fp_splitA>:
 a34:	88 0f       	add	r24, r24
 a36:	97 fb       	bst	r25, 7
 a38:	99 1f       	adc	r25, r25
 a3a:	61 f0       	breq	.+24     	; 0xa54 <__fp_splitA+0x20>
 a3c:	9f 3f       	cpi	r25, 0xFF	; 255
 a3e:	79 f0       	breq	.+30     	; 0xa5e <__fp_splitA+0x2a>
 a40:	87 95       	ror	r24
 a42:	08 95       	ret
 a44:	12 16       	cp	r1, r18
 a46:	13 06       	cpc	r1, r19
 a48:	14 06       	cpc	r1, r20
 a4a:	55 1f       	adc	r21, r21
 a4c:	f2 cf       	rjmp	.-28     	; 0xa32 <__fp_split3+0xe>
 a4e:	46 95       	lsr	r20
 a50:	f1 df       	rcall	.-30     	; 0xa34 <__fp_splitA>
 a52:	08 c0       	rjmp	.+16     	; 0xa64 <__fp_splitA+0x30>
 a54:	16 16       	cp	r1, r22
 a56:	17 06       	cpc	r1, r23
 a58:	18 06       	cpc	r1, r24
 a5a:	99 1f       	adc	r25, r25
 a5c:	f1 cf       	rjmp	.-30     	; 0xa40 <__fp_splitA+0xc>
 a5e:	86 95       	lsr	r24
 a60:	71 05       	cpc	r23, r1
 a62:	61 05       	cpc	r22, r1
 a64:	08 94       	sec
 a66:	08 95       	ret

00000a68 <__fp_zero>:
 a68:	e8 94       	clt

00000a6a <__fp_szero>:
 a6a:	bb 27       	eor	r27, r27
 a6c:	66 27       	eor	r22, r22
 a6e:	77 27       	eor	r23, r23
 a70:	cb 01       	movw	r24, r22
 a72:	97 f9       	bld	r25, 7
 a74:	08 95       	ret

00000a76 <__gesf2>:
 a76:	0e 94 c6 04 	call	0x98c	; 0x98c <__fp_cmp>
 a7a:	08 f4       	brcc	.+2      	; 0xa7e <__gesf2+0x8>
 a7c:	8f ef       	ldi	r24, 0xFF	; 255
 a7e:	08 95       	ret

00000a80 <__mulsf3>:
 a80:	0e 94 53 05 	call	0xaa6	; 0xaa6 <__mulsf3x>
 a84:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__fp_round>
 a88:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <__fp_pscA>
 a8c:	38 f0       	brcs	.+14     	; 0xa9c <__mulsf3+0x1c>
 a8e:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <__fp_pscB>
 a92:	20 f0       	brcs	.+8      	; 0xa9c <__mulsf3+0x1c>
 a94:	95 23       	and	r25, r21
 a96:	11 f0       	breq	.+4      	; 0xa9c <__mulsf3+0x1c>
 a98:	0c 94 ea 04 	jmp	0x9d4	; 0x9d4 <__fp_inf>
 a9c:	0c 94 f0 04 	jmp	0x9e0	; 0x9e0 <__fp_nan>
 aa0:	11 24       	eor	r1, r1
 aa2:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__fp_szero>

00000aa6 <__mulsf3x>:
 aa6:	0e 94 12 05 	call	0xa24	; 0xa24 <__fp_split3>
 aaa:	70 f3       	brcs	.-36     	; 0xa88 <__mulsf3+0x8>

00000aac <__mulsf3_pse>:
 aac:	95 9f       	mul	r25, r21
 aae:	c1 f3       	breq	.-16     	; 0xaa0 <__mulsf3+0x20>
 ab0:	95 0f       	add	r25, r21
 ab2:	50 e0       	ldi	r21, 0x00	; 0
 ab4:	55 1f       	adc	r21, r21
 ab6:	62 9f       	mul	r22, r18
 ab8:	f0 01       	movw	r30, r0
 aba:	72 9f       	mul	r23, r18
 abc:	bb 27       	eor	r27, r27
 abe:	f0 0d       	add	r31, r0
 ac0:	b1 1d       	adc	r27, r1
 ac2:	63 9f       	mul	r22, r19
 ac4:	aa 27       	eor	r26, r26
 ac6:	f0 0d       	add	r31, r0
 ac8:	b1 1d       	adc	r27, r1
 aca:	aa 1f       	adc	r26, r26
 acc:	64 9f       	mul	r22, r20
 ace:	66 27       	eor	r22, r22
 ad0:	b0 0d       	add	r27, r0
 ad2:	a1 1d       	adc	r26, r1
 ad4:	66 1f       	adc	r22, r22
 ad6:	82 9f       	mul	r24, r18
 ad8:	22 27       	eor	r18, r18
 ada:	b0 0d       	add	r27, r0
 adc:	a1 1d       	adc	r26, r1
 ade:	62 1f       	adc	r22, r18
 ae0:	73 9f       	mul	r23, r19
 ae2:	b0 0d       	add	r27, r0
 ae4:	a1 1d       	adc	r26, r1
 ae6:	62 1f       	adc	r22, r18
 ae8:	83 9f       	mul	r24, r19
 aea:	a0 0d       	add	r26, r0
 aec:	61 1d       	adc	r22, r1
 aee:	22 1f       	adc	r18, r18
 af0:	74 9f       	mul	r23, r20
 af2:	33 27       	eor	r19, r19
 af4:	a0 0d       	add	r26, r0
 af6:	61 1d       	adc	r22, r1
 af8:	23 1f       	adc	r18, r19
 afa:	84 9f       	mul	r24, r20
 afc:	60 0d       	add	r22, r0
 afe:	21 1d       	adc	r18, r1
 b00:	82 2f       	mov	r24, r18
 b02:	76 2f       	mov	r23, r22
 b04:	6a 2f       	mov	r22, r26
 b06:	11 24       	eor	r1, r1
 b08:	9f 57       	subi	r25, 0x7F	; 127
 b0a:	50 40       	sbci	r21, 0x00	; 0
 b0c:	9a f0       	brmi	.+38     	; 0xb34 <__mulsf3_pse+0x88>
 b0e:	f1 f0       	breq	.+60     	; 0xb4c <__mulsf3_pse+0xa0>
 b10:	88 23       	and	r24, r24
 b12:	4a f0       	brmi	.+18     	; 0xb26 <__mulsf3_pse+0x7a>
 b14:	ee 0f       	add	r30, r30
 b16:	ff 1f       	adc	r31, r31
 b18:	bb 1f       	adc	r27, r27
 b1a:	66 1f       	adc	r22, r22
 b1c:	77 1f       	adc	r23, r23
 b1e:	88 1f       	adc	r24, r24
 b20:	91 50       	subi	r25, 0x01	; 1
 b22:	50 40       	sbci	r21, 0x00	; 0
 b24:	a9 f7       	brne	.-22     	; 0xb10 <__mulsf3_pse+0x64>
 b26:	9e 3f       	cpi	r25, 0xFE	; 254
 b28:	51 05       	cpc	r21, r1
 b2a:	80 f0       	brcs	.+32     	; 0xb4c <__mulsf3_pse+0xa0>
 b2c:	0c 94 ea 04 	jmp	0x9d4	; 0x9d4 <__fp_inf>
 b30:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__fp_szero>
 b34:	5f 3f       	cpi	r21, 0xFF	; 255
 b36:	e4 f3       	brlt	.-8      	; 0xb30 <__mulsf3_pse+0x84>
 b38:	98 3e       	cpi	r25, 0xE8	; 232
 b3a:	d4 f3       	brlt	.-12     	; 0xb30 <__mulsf3_pse+0x84>
 b3c:	86 95       	lsr	r24
 b3e:	77 95       	ror	r23
 b40:	67 95       	ror	r22
 b42:	b7 95       	ror	r27
 b44:	f7 95       	ror	r31
 b46:	e7 95       	ror	r30
 b48:	9f 5f       	subi	r25, 0xFF	; 255
 b4a:	c1 f7       	brne	.-16     	; 0xb3c <__mulsf3_pse+0x90>
 b4c:	fe 2b       	or	r31, r30
 b4e:	88 0f       	add	r24, r24
 b50:	91 1d       	adc	r25, r1
 b52:	96 95       	lsr	r25
 b54:	87 95       	ror	r24
 b56:	97 f9       	bld	r25, 7
 b58:	08 95       	ret

00000b5a <__divmodhi4>:
 b5a:	97 fb       	bst	r25, 7
 b5c:	07 2e       	mov	r0, r23
 b5e:	16 f4       	brtc	.+4      	; 0xb64 <__divmodhi4+0xa>
 b60:	00 94       	com	r0
 b62:	07 d0       	rcall	.+14     	; 0xb72 <__divmodhi4_neg1>
 b64:	77 fd       	sbrc	r23, 7
 b66:	09 d0       	rcall	.+18     	; 0xb7a <__divmodhi4_neg2>
 b68:	0e 94 c1 05 	call	0xb82	; 0xb82 <__udivmodhi4>
 b6c:	07 fc       	sbrc	r0, 7
 b6e:	05 d0       	rcall	.+10     	; 0xb7a <__divmodhi4_neg2>
 b70:	3e f4       	brtc	.+14     	; 0xb80 <__divmodhi4_exit>

00000b72 <__divmodhi4_neg1>:
 b72:	90 95       	com	r25
 b74:	81 95       	neg	r24
 b76:	9f 4f       	sbci	r25, 0xFF	; 255
 b78:	08 95       	ret

00000b7a <__divmodhi4_neg2>:
 b7a:	70 95       	com	r23
 b7c:	61 95       	neg	r22
 b7e:	7f 4f       	sbci	r23, 0xFF	; 255

00000b80 <__divmodhi4_exit>:
 b80:	08 95       	ret

00000b82 <__udivmodhi4>:
 b82:	aa 1b       	sub	r26, r26
 b84:	bb 1b       	sub	r27, r27
 b86:	51 e1       	ldi	r21, 0x11	; 17
 b88:	07 c0       	rjmp	.+14     	; 0xb98 <__udivmodhi4_ep>

00000b8a <__udivmodhi4_loop>:
 b8a:	aa 1f       	adc	r26, r26
 b8c:	bb 1f       	adc	r27, r27
 b8e:	a6 17       	cp	r26, r22
 b90:	b7 07       	cpc	r27, r23
 b92:	10 f0       	brcs	.+4      	; 0xb98 <__udivmodhi4_ep>
 b94:	a6 1b       	sub	r26, r22
 b96:	b7 0b       	sbc	r27, r23

00000b98 <__udivmodhi4_ep>:
 b98:	88 1f       	adc	r24, r24
 b9a:	99 1f       	adc	r25, r25
 b9c:	5a 95       	dec	r21
 b9e:	a9 f7       	brne	.-22     	; 0xb8a <__udivmodhi4_loop>
 ba0:	80 95       	com	r24
 ba2:	90 95       	com	r25
 ba4:	bc 01       	movw	r22, r24
 ba6:	cd 01       	movw	r24, r26
 ba8:	08 95       	ret

00000baa <strcpy>:
 baa:	fb 01       	movw	r30, r22
 bac:	dc 01       	movw	r26, r24
 bae:	01 90       	ld	r0, Z+
 bb0:	0d 92       	st	X+, r0
 bb2:	00 20       	and	r0, r0
 bb4:	e1 f7       	brne	.-8      	; 0xbae <strcpy+0x4>
 bb6:	08 95       	ret

00000bb8 <__itoa_ncheck>:
 bb8:	bb 27       	eor	r27, r27
 bba:	4a 30       	cpi	r20, 0x0A	; 10
 bbc:	31 f4       	brne	.+12     	; 0xbca <__itoa_ncheck+0x12>
 bbe:	99 23       	and	r25, r25
 bc0:	22 f4       	brpl	.+8      	; 0xbca <__itoa_ncheck+0x12>
 bc2:	bd e2       	ldi	r27, 0x2D	; 45
 bc4:	90 95       	com	r25
 bc6:	81 95       	neg	r24
 bc8:	9f 4f       	sbci	r25, 0xFF	; 255
 bca:	0c 94 e8 05 	jmp	0xbd0	; 0xbd0 <__utoa_common>

00000bce <__utoa_ncheck>:
 bce:	bb 27       	eor	r27, r27

00000bd0 <__utoa_common>:
 bd0:	fb 01       	movw	r30, r22
 bd2:	55 27       	eor	r21, r21
 bd4:	aa 27       	eor	r26, r26
 bd6:	88 0f       	add	r24, r24
 bd8:	99 1f       	adc	r25, r25
 bda:	aa 1f       	adc	r26, r26
 bdc:	a4 17       	cp	r26, r20
 bde:	10 f0       	brcs	.+4      	; 0xbe4 <__utoa_common+0x14>
 be0:	a4 1b       	sub	r26, r20
 be2:	83 95       	inc	r24
 be4:	50 51       	subi	r21, 0x10	; 16
 be6:	b9 f7       	brne	.-18     	; 0xbd6 <__utoa_common+0x6>
 be8:	a0 5d       	subi	r26, 0xD0	; 208
 bea:	aa 33       	cpi	r26, 0x3A	; 58
 bec:	08 f0       	brcs	.+2      	; 0xbf0 <__utoa_common+0x20>
 bee:	a9 5d       	subi	r26, 0xD9	; 217
 bf0:	a1 93       	st	Z+, r26
 bf2:	00 97       	sbiw	r24, 0x00	; 0
 bf4:	79 f7       	brne	.-34     	; 0xbd4 <__utoa_common+0x4>
 bf6:	b1 11       	cpse	r27, r1
 bf8:	b1 93       	st	Z+, r27
 bfa:	11 92       	st	Z+, r1
 bfc:	cb 01       	movw	r24, r22
 bfe:	0c 94 01 06 	jmp	0xc02	; 0xc02 <strrev>

00000c02 <strrev>:
 c02:	dc 01       	movw	r26, r24
 c04:	fc 01       	movw	r30, r24
 c06:	67 2f       	mov	r22, r23
 c08:	71 91       	ld	r23, Z+
 c0a:	77 23       	and	r23, r23
 c0c:	e1 f7       	brne	.-8      	; 0xc06 <strrev+0x4>
 c0e:	32 97       	sbiw	r30, 0x02	; 2
 c10:	04 c0       	rjmp	.+8      	; 0xc1a <strrev+0x18>
 c12:	7c 91       	ld	r23, X
 c14:	6d 93       	st	X+, r22
 c16:	70 83       	st	Z, r23
 c18:	62 91       	ld	r22, -Z
 c1a:	ae 17       	cp	r26, r30
 c1c:	bf 07       	cpc	r27, r31
 c1e:	c8 f3       	brcs	.-14     	; 0xc12 <strrev+0x10>
 c20:	08 95       	ret

00000c22 <_exit>:
 c22:	f8 94       	cli

00000c24 <__stop_program>:
 c24:	ff cf       	rjmp	.-2      	; 0xc24 <__stop_program>
