
Pyrometer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000afc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000018  00800060  00000afc  00000b70  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000b88  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000bb8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000120  00000000  00000000  00000bf4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001306  00000000  00000000  00000d14  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000098e  00000000  00000000  0000201a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000ab9  00000000  00000000  000029a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002f0  00000000  00000000  00003464  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005d9  00000000  00000000  00003754  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000ae4  00000000  00000000  00003d2d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000f0  00000000  00000000  00004811  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ef       	ldi	r30, 0xFC	; 252
  68:	fa e0       	ldi	r31, 0x0A	; 10
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 37       	cpi	r26, 0x78	; 120
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 6f 02 	call	0x4de	; 0x4de <main>
  7a:	0c 94 7c 05 	jmp	0xaf8	; 0xaf8 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <_LCD_OutNibble>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  82:	80 ff       	sbrs	r24, 0
  84:	02 c0       	rjmp	.+4      	; 0x8a <_LCD_OutNibble+0x8>
  86:	dc 9a       	sbi	0x1b, 4	; 27
  88:	01 c0       	rjmp	.+2      	; 0x8c <_LCD_OutNibble+0xa>
  8a:	dc 98       	cbi	0x1b, 4	; 27
  8c:	81 ff       	sbrs	r24, 1
  8e:	02 c0       	rjmp	.+4      	; 0x94 <_LCD_OutNibble+0x12>
  90:	dd 9a       	sbi	0x1b, 5	; 27
  92:	01 c0       	rjmp	.+2      	; 0x96 <_LCD_OutNibble+0x14>
  94:	dd 98       	cbi	0x1b, 5	; 27
  96:	82 ff       	sbrs	r24, 2
  98:	02 c0       	rjmp	.+4      	; 0x9e <_LCD_OutNibble+0x1c>
  9a:	de 9a       	sbi	0x1b, 6	; 27
  9c:	01 c0       	rjmp	.+2      	; 0xa0 <_LCD_OutNibble+0x1e>
  9e:	de 98       	cbi	0x1b, 6	; 27
  a0:	83 ff       	sbrs	r24, 3
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <_LCD_OutNibble+0x26>
  a4:	df 9a       	sbi	0x1b, 7	; 27
  a6:	08 95       	ret
  a8:	df 98       	cbi	0x1b, 7	; 27
  aa:	08 95       	ret

000000ac <_LCD_InNibble>:
  ac:	89 b3       	in	r24, 0x19	; 25
  ae:	82 95       	swap	r24
  b0:	81 70       	andi	r24, 0x01	; 1
  b2:	cd 99       	sbic	0x19, 5	; 25
  b4:	82 60       	ori	r24, 0x02	; 2
  b6:	ce 99       	sbic	0x19, 6	; 25
  b8:	84 60       	ori	r24, 0x04	; 4
  ba:	cf 99       	sbic	0x19, 7	; 25
  bc:	88 60       	ori	r24, 0x08	; 8
  be:	08 95       	ret

000000c0 <_LCD_Read>:
  c0:	cf 93       	push	r28
  c2:	df 93       	push	r29
  c4:	d4 98       	cbi	0x1a, 4	; 26
  c6:	d5 98       	cbi	0x1a, 5	; 26
  c8:	d6 98       	cbi	0x1a, 6	; 26
  ca:	d7 98       	cbi	0x1a, 7	; 26
  cc:	da 9a       	sbi	0x1b, 2	; 27
  ce:	db 9a       	sbi	0x1b, 3	; 27
  d0:	0e 94 56 00 	call	0xac	; 0xac <_LCD_InNibble>
  d4:	90 e1       	ldi	r25, 0x10	; 16
  d6:	89 9f       	mul	r24, r25
  d8:	e0 01       	movw	r28, r0
  da:	11 24       	eor	r1, r1
  dc:	db 98       	cbi	0x1b, 3	; 27
  de:	db 9a       	sbi	0x1b, 3	; 27
  e0:	0e 94 56 00 	call	0xac	; 0xac <_LCD_InNibble>
  e4:	db 98       	cbi	0x1b, 3	; 27
  e6:	8c 2b       	or	r24, r28
  e8:	df 91       	pop	r29
  ea:	cf 91       	pop	r28
  ec:	08 95       	ret

000000ee <LCD_ReadStatus>:
  ee:	d9 98       	cbi	0x1b, 1	; 27
  f0:	0e 94 60 00 	call	0xc0	; 0xc0 <_LCD_Read>
  f4:	08 95       	ret

000000f6 <_LCD_Write>:
  f6:	cf 93       	push	r28
  f8:	c8 2f       	mov	r28, r24
  fa:	d4 9a       	sbi	0x1a, 4	; 26
  fc:	d5 9a       	sbi	0x1a, 5	; 26
  fe:	d6 9a       	sbi	0x1a, 6	; 26
 100:	d7 9a       	sbi	0x1a, 7	; 26
 102:	da 98       	cbi	0x1b, 2	; 27
 104:	db 9a       	sbi	0x1b, 3	; 27
 106:	82 95       	swap	r24
 108:	8f 70       	andi	r24, 0x0F	; 15
 10a:	0e 94 41 00 	call	0x82	; 0x82 <_LCD_OutNibble>
 10e:	db 98       	cbi	0x1b, 3	; 27
 110:	db 9a       	sbi	0x1b, 3	; 27
 112:	8c 2f       	mov	r24, r28
 114:	0e 94 41 00 	call	0x82	; 0x82 <_LCD_OutNibble>
 118:	db 98       	cbi	0x1b, 3	; 27
 11a:	0e 94 77 00 	call	0xee	; 0xee <LCD_ReadStatus>
 11e:	88 23       	and	r24, r24
 120:	e4 f3       	brlt	.-8      	; 0x11a <_LCD_Write+0x24>
 122:	cf 91       	pop	r28
 124:	08 95       	ret

00000126 <LCD_WriteCommand>:
 126:	d9 98       	cbi	0x1b, 1	; 27
 128:	0e 94 7b 00 	call	0xf6	; 0xf6 <_LCD_Write>
 12c:	08 95       	ret

0000012e <LCD_WriteData>:
 12e:	d9 9a       	sbi	0x1b, 1	; 27
 130:	0e 94 7b 00 	call	0xf6	; 0xf6 <_LCD_Write>
 134:	08 95       	ret

00000136 <LCD_WriteText>:
 136:	cf 93       	push	r28
 138:	df 93       	push	r29
 13a:	ec 01       	movw	r28, r24
 13c:	88 81       	ld	r24, Y
 13e:	88 23       	and	r24, r24
 140:	31 f0       	breq	.+12     	; 0x14e <LCD_WriteText+0x18>
 142:	21 96       	adiw	r28, 0x01	; 1
 144:	0e 94 97 00 	call	0x12e	; 0x12e <LCD_WriteData>
 148:	89 91       	ld	r24, Y+
 14a:	81 11       	cpse	r24, r1
 14c:	fb cf       	rjmp	.-10     	; 0x144 <LCD_WriteText+0xe>
 14e:	df 91       	pop	r29
 150:	cf 91       	pop	r28
 152:	08 95       	ret

00000154 <LCD_GoTo>:
 154:	90 e4       	ldi	r25, 0x40	; 64
 156:	69 9f       	mul	r22, r25
 158:	80 0d       	add	r24, r0
 15a:	11 24       	eor	r1, r1
 15c:	80 68       	ori	r24, 0x80	; 128
 15e:	0e 94 93 00 	call	0x126	; 0x126 <LCD_WriteCommand>
 162:	08 95       	ret

00000164 <LCD_Clear>:
 164:	81 e0       	ldi	r24, 0x01	; 1
 166:	0e 94 93 00 	call	0x126	; 0x126 <LCD_WriteCommand>
 16a:	83 ef       	ldi	r24, 0xF3	; 243
 16c:	91 e0       	ldi	r25, 0x01	; 1
 16e:	01 97       	sbiw	r24, 0x01	; 1
 170:	f1 f7       	brne	.-4      	; 0x16e <LCD_Clear+0xa>
 172:	00 c0       	rjmp	.+0      	; 0x174 <LCD_Clear+0x10>
 174:	00 00       	nop
 176:	08 95       	ret

00000178 <LCD_Initalize>:
 178:	cf 93       	push	r28
 17a:	d4 9a       	sbi	0x1a, 4	; 26
 17c:	d5 9a       	sbi	0x1a, 5	; 26
 17e:	d6 9a       	sbi	0x1a, 6	; 26
 180:	d7 9a       	sbi	0x1a, 7	; 26
 182:	d3 9a       	sbi	0x1a, 3	; 26
 184:	d1 9a       	sbi	0x1a, 1	; 26
 186:	d2 9a       	sbi	0x1a, 2	; 26
 188:	85 ea       	ldi	r24, 0xA5	; 165
 18a:	9e e0       	ldi	r25, 0x0E	; 14
 18c:	01 97       	sbiw	r24, 0x01	; 1
 18e:	f1 f7       	brne	.-4      	; 0x18c <LCD_Initalize+0x14>
 190:	00 c0       	rjmp	.+0      	; 0x192 <LCD_Initalize+0x1a>
 192:	00 00       	nop
 194:	d9 98       	cbi	0x1b, 1	; 27
 196:	db 98       	cbi	0x1b, 3	; 27
 198:	da 98       	cbi	0x1b, 2	; 27
 19a:	c3 e0       	ldi	r28, 0x03	; 3
 19c:	db 9a       	sbi	0x1b, 3	; 27
 19e:	83 e0       	ldi	r24, 0x03	; 3
 1a0:	0e 94 41 00 	call	0x82	; 0x82 <_LCD_OutNibble>
 1a4:	db 98       	cbi	0x1b, 3	; 27
 1a6:	81 ee       	ldi	r24, 0xE1	; 225
 1a8:	94 e0       	ldi	r25, 0x04	; 4
 1aa:	01 97       	sbiw	r24, 0x01	; 1
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <LCD_Initalize+0x32>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <LCD_Initalize+0x38>
 1b0:	00 00       	nop
 1b2:	c1 50       	subi	r28, 0x01	; 1
 1b4:	99 f7       	brne	.-26     	; 0x19c <LCD_Initalize+0x24>
 1b6:	db 9a       	sbi	0x1b, 3	; 27
 1b8:	82 e0       	ldi	r24, 0x02	; 2
 1ba:	0e 94 41 00 	call	0x82	; 0x82 <_LCD_OutNibble>
 1be:	db 98       	cbi	0x1b, 3	; 27
 1c0:	89 ef       	ldi	r24, 0xF9	; 249
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	01 97       	sbiw	r24, 0x01	; 1
 1c6:	f1 f7       	brne	.-4      	; 0x1c4 <LCD_Initalize+0x4c>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <LCD_Initalize+0x52>
 1ca:	00 00       	nop
 1cc:	88 e2       	ldi	r24, 0x28	; 40
 1ce:	0e 94 93 00 	call	0x126	; 0x126 <LCD_WriteCommand>
 1d2:	88 e0       	ldi	r24, 0x08	; 8
 1d4:	0e 94 93 00 	call	0x126	; 0x126 <LCD_WriteCommand>
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	0e 94 93 00 	call	0x126	; 0x126 <LCD_WriteCommand>
 1de:	86 e0       	ldi	r24, 0x06	; 6
 1e0:	0e 94 93 00 	call	0x126	; 0x126 <LCD_WriteCommand>
 1e4:	8c e0       	ldi	r24, 0x0C	; 12
 1e6:	0e 94 93 00 	call	0x126	; 0x126 <LCD_WriteCommand>
 1ea:	cf 91       	pop	r28
 1ec:	08 95       	ret

000001ee <convertDoubleToCharDisplay>:

#include "HD44780.h"
#include "i2cmaster.h"


void convertDoubleToCharDisplay(double temperature,char display[7]){
 1ee:	4f 92       	push	r4
 1f0:	5f 92       	push	r5
 1f2:	6f 92       	push	r6
 1f4:	7f 92       	push	r7
 1f6:	8f 92       	push	r8
 1f8:	9f 92       	push	r9
 1fa:	af 92       	push	r10
 1fc:	bf 92       	push	r11
 1fe:	cf 92       	push	r12
 200:	df 92       	push	r13
 202:	ef 92       	push	r14
 204:	ff 92       	push	r15
 206:	0f 93       	push	r16
 208:	1f 93       	push	r17
 20a:	cf 93       	push	r28
 20c:	df 93       	push	r29
 20e:	cd b7       	in	r28, 0x3d	; 61
 210:	de b7       	in	r29, 0x3e	; 62
 212:	2f 97       	sbiw	r28, 0x0f	; 15
 214:	0f b6       	in	r0, 0x3f	; 63
 216:	f8 94       	cli
 218:	de bf       	out	0x3e, r29	; 62
 21a:	0f be       	out	0x3f, r0	; 63
 21c:	cd bf       	out	0x3d, r28	; 61
 21e:	2b 01       	movw	r4, r22
 220:	3c 01       	movw	r6, r24
 222:	7a 01       	movw	r14, r20
	
	char displayStr[7] = "XXXXXXX";
 224:	87 e0       	ldi	r24, 0x07	; 7
 226:	e0 e6       	ldi	r30, 0x60	; 96
 228:	f0 e0       	ldi	r31, 0x00	; 0
 22a:	de 01       	movw	r26, r28
 22c:	11 96       	adiw	r26, 0x01	; 1
 22e:	01 90       	ld	r0, Z+
 230:	0d 92       	st	X+, r0
 232:	8a 95       	dec	r24
 234:	e1 f7       	brne	.-8      	; 0x22e <convertDoubleToCharDisplay+0x40>
	int total = temperature;
 236:	c3 01       	movw	r24, r6
 238:	b2 01       	movw	r22, r4
 23a:	0e 94 e7 03 	call	0x7ce	; 0x7ce <__fixsfsi>
 23e:	4b 01       	movw	r8, r22
 240:	5c 01       	movw	r10, r24
 242:	8b 01       	movw	r16, r22
	int mantis = abs(temperature * 1000);
 244:	20 e0       	ldi	r18, 0x00	; 0
 246:	30 e0       	ldi	r19, 0x00	; 0
 248:	4a e7       	ldi	r20, 0x7A	; 122
 24a:	54 e4       	ldi	r21, 0x44	; 68
 24c:	c3 01       	movw	r24, r6
 24e:	b2 01       	movw	r22, r4
 250:	0e 94 ab 04 	call	0x956	; 0x956 <__mulsf3>
 254:	0e 94 e7 03 	call	0x7ce	; 0x7ce <__fixsfsi>
 258:	9b 01       	movw	r18, r22
 25a:	77 23       	and	r23, r23
 25c:	24 f4       	brge	.+8      	; 0x266 <convertDoubleToCharDisplay+0x78>
 25e:	22 27       	eor	r18, r18
 260:	33 27       	eor	r19, r19
 262:	26 1b       	sub	r18, r22
 264:	37 0b       	sbc	r19, r23
 266:	d2 2e       	mov	r13, r18
 268:	c3 2e       	mov	r12, r19
	mantis = mantis % 1000;
	char totalStr[] = "123" ;
 26a:	21 e3       	ldi	r18, 0x31	; 49
 26c:	32 e3       	ldi	r19, 0x32	; 50
 26e:	39 87       	std	Y+9, r19	; 0x09
 270:	28 87       	std	Y+8, r18	; 0x08
 272:	83 e3       	ldi	r24, 0x33	; 51
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	9b 87       	std	Y+11, r25	; 0x0b
 278:	8a 87       	std	Y+10, r24	; 0x0a
	char mantisStr[] = "123" ;
 27a:	3d 87       	std	Y+13, r19	; 0x0d
 27c:	2c 87       	std	Y+12, r18	; 0x0c
 27e:	9f 87       	std	Y+15, r25	; 0x0f
 280:	8e 87       	std	Y+14, r24	; 0x0e
	itoa(abs(total),totalStr,10);
 282:	c4 01       	movw	r24, r8
 284:	11 23       	and	r17, r17
 286:	24 f4       	brge	.+8      	; 0x290 <convertDoubleToCharDisplay+0xa2>
 288:	88 27       	eor	r24, r24
 28a:	99 27       	eor	r25, r25
 28c:	88 19       	sub	r24, r8
 28e:	99 09       	sbc	r25, r9
 290:	5c 01       	movw	r10, r24
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 292:	4a e0       	ldi	r20, 0x0A	; 10
 294:	be 01       	movw	r22, r28
 296:	68 5f       	subi	r22, 0xF8	; 248
 298:	7f 4f       	sbci	r23, 0xFF	; 255
 29a:	0e 94 47 05 	call	0xa8e	; 0xa8e <__itoa_ncheck>
 29e:	8d 2d       	mov	r24, r13
 2a0:	9c 2d       	mov	r25, r12
 2a2:	68 ee       	ldi	r22, 0xE8	; 232
 2a4:	73 e0       	ldi	r23, 0x03	; 3
 2a6:	0e 94 18 05 	call	0xa30	; 0xa30 <__divmodhi4>
 2aa:	4a e0       	ldi	r20, 0x0A	; 10
 2ac:	be 01       	movw	r22, r28
 2ae:	64 5f       	subi	r22, 0xF4	; 244
 2b0:	7f 4f       	sbci	r23, 0xFF	; 255
 2b2:	0e 94 47 05 	call	0xa8e	; 0xa8e <__itoa_ncheck>
	itoa(mantis,mantisStr,10);

	displayStr[0]= ' ';
 2b6:	80 e2       	ldi	r24, 0x20	; 32
 2b8:	89 83       	std	Y+1, r24	; 0x01
	displayStr[1]= ' ';
 2ba:	8a 83       	std	Y+2, r24	; 0x02
	displayStr[2]= ' ';
 2bc:	8b 83       	std	Y+3, r24	; 0x03
	if(abs(total) >= 100){
 2be:	84 e6       	ldi	r24, 0x64	; 100
 2c0:	a8 16       	cp	r10, r24
 2c2:	b1 04       	cpc	r11, r1
 2c4:	5c f0       	brlt	.+22     	; 0x2dc <convertDoubleToCharDisplay+0xee>
		displayStr[1]=totalStr[0];
 2c6:	88 85       	ldd	r24, Y+8	; 0x08
 2c8:	8a 83       	std	Y+2, r24	; 0x02
		displayStr[2]=totalStr[1];
 2ca:	89 85       	ldd	r24, Y+9	; 0x09
 2cc:	8b 83       	std	Y+3, r24	; 0x03
		displayStr[3]=totalStr[2];
 2ce:	8a 85       	ldd	r24, Y+10	; 0x0a
 2d0:	8c 83       	std	Y+4, r24	; 0x04
		if(total < 0)
 2d2:	11 23       	and	r17, r17
 2d4:	b4 f4       	brge	.+44     	; 0x302 <convertDoubleToCharDisplay+0x114>
		displayStr[0]= '-';
 2d6:	8d e2       	ldi	r24, 0x2D	; 45
 2d8:	89 83       	std	Y+1, r24	; 0x01
 2da:	13 c0       	rjmp	.+38     	; 0x302 <convertDoubleToCharDisplay+0x114>
		
		
		}else if(abs(total) >= 10){
 2dc:	8a e0       	ldi	r24, 0x0A	; 10
 2de:	a8 16       	cp	r10, r24
 2e0:	b1 04       	cpc	r11, r1
 2e2:	4c f0       	brlt	.+18     	; 0x2f6 <convertDoubleToCharDisplay+0x108>
		displayStr[0] = ' ';
		displayStr[2]=totalStr[0];
 2e4:	88 85       	ldd	r24, Y+8	; 0x08
 2e6:	8b 83       	std	Y+3, r24	; 0x03
		displayStr[3]=totalStr[1];
 2e8:	89 85       	ldd	r24, Y+9	; 0x09
 2ea:	8c 83       	std	Y+4, r24	; 0x04
		if(abs(total) < 0)
 2ec:	bb 20       	and	r11, r11
 2ee:	4c f4       	brge	.+18     	; 0x302 <convertDoubleToCharDisplay+0x114>
		displayStr[1]= '-';
 2f0:	8d e2       	ldi	r24, 0x2D	; 45
 2f2:	8a 83       	std	Y+2, r24	; 0x02
 2f4:	06 c0       	rjmp	.+12     	; 0x302 <convertDoubleToCharDisplay+0x114>
		}else{
		displayStr[0] = ' ';
		displayStr[0] = ' ';
		displayStr[3]=totalStr[0];
 2f6:	88 85       	ldd	r24, Y+8	; 0x08
 2f8:	8c 83       	std	Y+4, r24	; 0x04
		if(abs(total) < 0)
 2fa:	bb 20       	and	r11, r11
 2fc:	14 f4       	brge	.+4      	; 0x302 <convertDoubleToCharDisplay+0x114>
		displayStr[2]= '-';
 2fe:	8d e2       	ldi	r24, 0x2D	; 45
 300:	8b 83       	std	Y+3, r24	; 0x03
	}
	
	displayStr[4]= '.';
 302:	8e e2       	ldi	r24, 0x2E	; 46
 304:	8d 83       	std	Y+5, r24	; 0x05
	displayStr[5]= mantisStr[0];
 306:	8c 85       	ldd	r24, Y+12	; 0x0c
 308:	8e 83       	std	Y+6, r24	; 0x06
	displayStr[6]= mantisStr[1];
 30a:	8d 85       	ldd	r24, Y+13	; 0x0d
 30c:	8f 83       	std	Y+7, r24	; 0x07
	

	strcpy(display,displayStr);
 30e:	be 01       	movw	r22, r28
 310:	6f 5f       	subi	r22, 0xFF	; 255
 312:	7f 4f       	sbci	r23, 0xFF	; 255
 314:	c7 01       	movw	r24, r14
 316:	0e 94 40 05 	call	0xa80	; 0xa80 <strcpy>
}
 31a:	2f 96       	adiw	r28, 0x0f	; 15
 31c:	0f b6       	in	r0, 0x3f	; 63
 31e:	f8 94       	cli
 320:	de bf       	out	0x3e, r29	; 62
 322:	0f be       	out	0x3f, r0	; 63
 324:	cd bf       	out	0x3d, r28	; 61
 326:	df 91       	pop	r29
 328:	cf 91       	pop	r28
 32a:	1f 91       	pop	r17
 32c:	0f 91       	pop	r16
 32e:	ff 90       	pop	r15
 330:	ef 90       	pop	r14
 332:	df 90       	pop	r13
 334:	cf 90       	pop	r12
 336:	bf 90       	pop	r11
 338:	af 90       	pop	r10
 33a:	9f 90       	pop	r9
 33c:	8f 90       	pop	r8
 33e:	7f 90       	pop	r7
 340:	6f 90       	pop	r6
 342:	5f 90       	pop	r5
 344:	4f 90       	pop	r4
 346:	08 95       	ret

00000348 <displayTemperature>:


void displayTemperature(char averageStr[7]){
 348:	cf 93       	push	r28
 34a:	df 93       	push	r29
 34c:	ec 01       	movw	r28, r24

	LCD_Clear();
 34e:	0e 94 b2 00 	call	0x164	; 0x164 <LCD_Clear>
	LCD_GoTo(0,1);
 352:	61 e0       	ldi	r22, 0x01	; 1
 354:	80 e0       	ldi	r24, 0x00	; 0
 356:	0e 94 aa 00 	call	0x154	; 0x154 <LCD_GoTo>
	LCD_WriteText("AVERAGE:");
 35a:	88 e6       	ldi	r24, 0x68	; 104
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	0e 94 9b 00 	call	0x136	; 0x136 <LCD_WriteText>
	LCD_GoTo(8,1);
 362:	61 e0       	ldi	r22, 0x01	; 1
 364:	88 e0       	ldi	r24, 0x08	; 8
 366:	0e 94 aa 00 	call	0x154	; 0x154 <LCD_GoTo>
	LCD_WriteText(averageStr);
 36a:	ce 01       	movw	r24, r28
 36c:	0e 94 9b 00 	call	0x136	; 0x136 <LCD_WriteText>
	LCD_GoTo(15,1);
 370:	61 e0       	ldi	r22, 0x01	; 1
 372:	8f e0       	ldi	r24, 0x0F	; 15
 374:	0e 94 aa 00 	call	0x154	; 0x154 <LCD_GoTo>
	LCD_WriteText("C");
 378:	81 e7       	ldi	r24, 0x71	; 113
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	0e 94 9b 00 	call	0x136	; 0x136 <LCD_WriteText>
 380:	87 ea       	ldi	r24, 0xA7	; 167
 382:	91 e6       	ldi	r25, 0x61	; 97
 384:	01 97       	sbiw	r24, 0x01	; 1
 386:	f1 f7       	brne	.-4      	; 0x384 <displayTemperature+0x3c>
 388:	00 c0       	rjmp	.+0      	; 0x38a <displayTemperature+0x42>
 38a:	00 00       	nop
	_delay_ms(100);
}
 38c:	df 91       	pop	r29
 38e:	cf 91       	pop	r28
 390:	08 95       	ret

00000392 <getData>:



void getData(double Temperatures[21]){
 392:	ef 92       	push	r14
 394:	ff 92       	push	r15
 396:	0f 93       	push	r16
 398:	1f 93       	push	r17
 39a:	cf 93       	push	r28
 39c:	df 93       	push	r29
 39e:	ec 01       	movw	r28, r24
 3a0:	8c 01       	movw	r16, r24
 3a2:	0c 5a       	subi	r16, 0xAC	; 172
 3a4:	1f 4f       	sbci	r17, 0xFF	; 255
	
	for(int index = 0; index < 21; ++index){
		temperature = 0;
		dateH = 0;   
		dataL = 0; 
		i2c_start_wait(adress+I2C_WRITE);
 3a6:	84 eb       	ldi	r24, 0xB4	; 180
 3a8:	0e 94 c6 02 	call	0x58c	; 0x58c <i2c_start_wait>
		i2c_write(0x07);                     
 3ac:	87 e0       	ldi	r24, 0x07	; 7
 3ae:	0e 94 ed 02 	call	0x5da	; 0x5da <i2c_write>
		i2c_rep_start(adress+I2C_READ);
 3b2:	85 eb       	ldi	r24, 0xB5	; 181
 3b4:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <i2c_rep_start>
		dataL = i2c_readAck();           
 3b8:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <i2c_readAck>
 3bc:	e8 2e       	mov	r14, r24
		dateH = i2c_readAck();             
 3be:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <i2c_readAck>
 3c2:	f8 2e       	mov	r15, r24
		i2c_readNak();                
 3c4:	0e 94 01 03 	call	0x602	; 0x602 <i2c_readNak>
		i2c_stop();
 3c8:	0e 94 e7 02 	call	0x5ce	; 0x5ce <i2c_stop>
		
		temperature = (double)(((dateH & 0x007F) << 8) + dataL); 
 3cc:	6f 2d       	mov	r22, r15
 3ce:	6f 77       	andi	r22, 0x7F	; 127
 3d0:	70 e0       	ldi	r23, 0x00	; 0
 3d2:	76 2f       	mov	r23, r22
 3d4:	66 27       	eor	r22, r22
 3d6:	6e 0d       	add	r22, r14
 3d8:	71 1d       	adc	r23, r1
 3da:	07 2e       	mov	r0, r23
 3dc:	00 0c       	add	r0, r0
 3de:	88 0b       	sbc	r24, r24
 3e0:	99 0b       	sbc	r25, r25
 3e2:	0e 94 1f 04 	call	0x83e	; 0x83e <__floatsisf>
		temperature = temperature*tempnalsb; 
 3e6:	2a e0       	ldi	r18, 0x0A	; 10
 3e8:	37 ed       	ldi	r19, 0xD7	; 215
 3ea:	43 ea       	ldi	r20, 0xA3	; 163
 3ec:	5c e3       	ldi	r21, 0x3C	; 60
 3ee:	0e 94 ab 04 	call	0x956	; 0x956 <__mulsf3>

		temperature = temperature - 273.15; 
		Temperatures[index] = temperature;
 3f2:	23 e3       	ldi	r18, 0x33	; 51
 3f4:	33 e9       	ldi	r19, 0x93	; 147
 3f6:	48 e8       	ldi	r20, 0x88	; 136
 3f8:	53 e4       	ldi	r21, 0x43	; 67
 3fa:	0e 94 08 03 	call	0x610	; 0x610 <__subsf3>
 3fe:	69 93       	st	Y+, r22
 400:	79 93       	st	Y+, r23
 402:	89 93       	st	Y+, r24
 404:	99 93       	st	Y+, r25
	int dateH = 0;           
	int dataL = 0;            
	double tempnalsb = 0.02;  
	double temperature = 0;  
	
	for(int index = 0; index < 21; ++index){
 406:	c0 17       	cp	r28, r16
 408:	d1 07       	cpc	r29, r17
 40a:	69 f6       	brne	.-102    	; 0x3a6 <getData+0x14>
		Temperatures[index] = temperature;
		
	}
	
	
}
 40c:	df 91       	pop	r29
 40e:	cf 91       	pop	r28
 410:	1f 91       	pop	r17
 412:	0f 91       	pop	r16
 414:	ff 90       	pop	r15
 416:	ef 90       	pop	r14
 418:	08 95       	ret

0000041a <approximation>:


double approximation(double temp){
 41a:	8f 92       	push	r8
 41c:	9f 92       	push	r9
 41e:	af 92       	push	r10
 420:	bf 92       	push	r11
 422:	cf 92       	push	r12
 424:	df 92       	push	r13
 426:	ef 92       	push	r14
 428:	ff 92       	push	r15
 42a:	6b 01       	movw	r12, r22
 42c:	7c 01       	movw	r14, r24

	return temp - (0.0038*temp*temp + -0.3371 * temp + 7.7529);
 42e:	2c e6       	ldi	r18, 0x6C	; 108
 430:	39 e0       	ldi	r19, 0x09	; 9
 432:	49 e7       	ldi	r20, 0x79	; 121
 434:	5b e3       	ldi	r21, 0x3B	; 59
 436:	0e 94 ab 04 	call	0x956	; 0x956 <__mulsf3>
 43a:	a7 01       	movw	r20, r14
 43c:	96 01       	movw	r18, r12
 43e:	0e 94 ab 04 	call	0x956	; 0x956 <__mulsf3>
 442:	4b 01       	movw	r8, r22
 444:	5c 01       	movw	r10, r24
 446:	2f e5       	ldi	r18, 0x5F	; 95
 448:	38 e9       	ldi	r19, 0x98	; 152
 44a:	4c ea       	ldi	r20, 0xAC	; 172
 44c:	5e eb       	ldi	r21, 0xBE	; 190
 44e:	c7 01       	movw	r24, r14
 450:	b6 01       	movw	r22, r12
 452:	0e 94 ab 04 	call	0x956	; 0x956 <__mulsf3>
 456:	9b 01       	movw	r18, r22
 458:	ac 01       	movw	r20, r24
 45a:	c5 01       	movw	r24, r10
 45c:	b4 01       	movw	r22, r8
 45e:	0e 94 09 03 	call	0x612	; 0x612 <__addsf3>
 462:	22 ec       	ldi	r18, 0xC2	; 194
 464:	37 e1       	ldi	r19, 0x17	; 23
 466:	48 ef       	ldi	r20, 0xF8	; 248
 468:	50 e4       	ldi	r21, 0x40	; 64
 46a:	0e 94 09 03 	call	0x612	; 0x612 <__addsf3>
 46e:	9b 01       	movw	r18, r22
 470:	ac 01       	movw	r20, r24
 472:	c7 01       	movw	r24, r14
 474:	b6 01       	movw	r22, r12
 476:	0e 94 08 03 	call	0x610	; 0x610 <__subsf3>
}
 47a:	ff 90       	pop	r15
 47c:	ef 90       	pop	r14
 47e:	df 90       	pop	r13
 480:	cf 90       	pop	r12
 482:	bf 90       	pop	r11
 484:	af 90       	pop	r10
 486:	9f 90       	pop	r9
 488:	8f 90       	pop	r8
 48a:	08 95       	ret

0000048c <dataProcesing>:
	
void dataProcesing(double Temperatures[21], char *average){
 48c:	ef 92       	push	r14
 48e:	ff 92       	push	r15
 490:	0f 93       	push	r16
 492:	1f 93       	push	r17
 494:	cf 93       	push	r28
 496:	df 93       	push	r29
 498:	7b 01       	movw	r14, r22
 49a:	ec 01       	movw	r28, r24
 49c:	8c 01       	movw	r16, r24
 49e:	0c 5a       	subi	r16, 0xAC	; 172
 4a0:	1f 4f       	sbci	r17, 0xFF	; 255
		
		double averageTMP = 0;
 4a2:	60 e0       	ldi	r22, 0x00	; 0
 4a4:	70 e0       	ldi	r23, 0x00	; 0
 4a6:	cb 01       	movw	r24, r22
		for(int x = 0; x < 21; ++x){
			averageTMP += Temperatures[x];
 4a8:	29 91       	ld	r18, Y+
 4aa:	39 91       	ld	r19, Y+
 4ac:	49 91       	ld	r20, Y+
 4ae:	59 91       	ld	r21, Y+
 4b0:	0e 94 09 03 	call	0x612	; 0x612 <__addsf3>
}
	
void dataProcesing(double Temperatures[21], char *average){
		
		double averageTMP = 0;
		for(int x = 0; x < 21; ++x){
 4b4:	c0 17       	cp	r28, r16
 4b6:	d1 07       	cpc	r29, r17
 4b8:	b9 f7       	brne	.-18     	; 0x4a8 <dataProcesing+0x1c>
			averageTMP += Temperatures[x];
		}
			
		averageTMP = averageTMP/20;
 4ba:	20 e0       	ldi	r18, 0x00	; 0
 4bc:	30 e0       	ldi	r19, 0x00	; 0
 4be:	40 ea       	ldi	r20, 0xA0	; 160
 4c0:	51 e4       	ldi	r21, 0x41	; 65
 4c2:	0e 94 75 03 	call	0x6ea	; 0x6ea <__divsf3>
		averageTMP = approximation(averageTMP);
 4c6:	0e 94 0d 02 	call	0x41a	; 0x41a <approximation>
		convertDoubleToCharDisplay(averageTMP,average);
 4ca:	a7 01       	movw	r20, r14
 4cc:	0e 94 f7 00 	call	0x1ee	; 0x1ee <convertDoubleToCharDisplay>

	 
}
 4d0:	df 91       	pop	r29
 4d2:	cf 91       	pop	r28
 4d4:	1f 91       	pop	r17
 4d6:	0f 91       	pop	r16
 4d8:	ff 90       	pop	r15
 4da:	ef 90       	pop	r14
 4dc:	08 95       	ret

000004de <main>:

int main(void)
{
 4de:	cf 93       	push	r28
 4e0:	df 93       	push	r29
 4e2:	cd b7       	in	r28, 0x3d	; 61
 4e4:	de b7       	in	r29, 0x3e	; 62
 4e6:	cb 55       	subi	r28, 0x5B	; 91
 4e8:	d1 09       	sbc	r29, r1
 4ea:	0f b6       	in	r0, 0x3f	; 63
 4ec:	f8 94       	cli
 4ee:	de bf       	out	0x3e, r29	; 62
 4f0:	0f be       	out	0x3f, r0	; 63
 4f2:	cd bf       	out	0x3d, r28	; 61
		
		LCD_Initalize();
 4f4:	0e 94 bc 00 	call	0x178	; 0x178 <LCD_Initalize>
		LCD_WriteText("INIT");
 4f8:	83 e7       	ldi	r24, 0x73	; 115
 4fa:	90 e0       	ldi	r25, 0x00	; 0
 4fc:	0e 94 9b 00 	call	0x136	; 0x136 <LCD_WriteText>
		i2c_init();  
 500:	0e 94 a4 02 	call	0x548	; 0x548 <i2c_init>

		double Temperatures[21];
		
		DDRD = _BV(DDD7);
 504:	80 e8       	ldi	r24, 0x80	; 128
 506:	81 bb       	out	0x11, r24	; 17
		PORTD = _BV(PD7);
 508:	82 bb       	out	0x12, r24	; 18
		char average[7];
		while (1)
		{
			
			if(!(PIND & _BV(PIND7)))
 50a:	87 99       	sbic	0x10, 7	; 16
 50c:	11 c0       	rjmp	.+34     	; 0x530 <main+0x52>
			{
				getData(Temperatures);
 50e:	ce 01       	movw	r24, r28
 510:	01 96       	adiw	r24, 0x01	; 1
 512:	0e 94 c9 01 	call	0x392	; 0x392 <getData>
				dataProcesing(Temperatures,average);
 516:	be 01       	movw	r22, r28
 518:	6b 5a       	subi	r22, 0xAB	; 171
 51a:	7f 4f       	sbci	r23, 0xFF	; 255
 51c:	ce 01       	movw	r24, r28
 51e:	01 96       	adiw	r24, 0x01	; 1
 520:	0e 94 46 02 	call	0x48c	; 0x48c <dataProcesing>
 524:	87 e8       	ldi	r24, 0x87	; 135
 526:	93 e1       	ldi	r25, 0x13	; 19
 528:	01 97       	sbiw	r24, 0x01	; 1
 52a:	f1 f7       	brne	.-4      	; 0x528 <main+0x4a>
 52c:	00 c0       	rjmp	.+0      	; 0x52e <main+0x50>
 52e:	00 00       	nop
				_delay_ms(20);
			}

			displayTemperature(average);
 530:	ce 01       	movw	r24, r28
 532:	8b 5a       	subi	r24, 0xAB	; 171
 534:	9f 4f       	sbci	r25, 0xFF	; 255
 536:	0e 94 a4 01 	call	0x348	; 0x348 <displayTemperature>
 53a:	8f e4       	ldi	r24, 0x4F	; 79
 53c:	93 ec       	ldi	r25, 0xC3	; 195
 53e:	01 97       	sbiw	r24, 0x01	; 1
 540:	f1 f7       	brne	.-4      	; 0x53e <main+0x60>
 542:	00 c0       	rjmp	.+0      	; 0x544 <main+0x66>
 544:	00 00       	nop
 546:	e1 cf       	rjmp	.-62     	; 0x50a <main+0x2c>

00000548 <i2c_init>:
 548:	11 b8       	out	0x01, r1	; 1
 54a:	82 e0       	ldi	r24, 0x02	; 2
 54c:	80 b9       	out	0x00, r24	; 0
 54e:	08 95       	ret

00000550 <i2c_start>:
 550:	94 ea       	ldi	r25, 0xA4	; 164
 552:	96 bf       	out	0x36, r25	; 54
 554:	06 b6       	in	r0, 0x36	; 54
 556:	07 fe       	sbrs	r0, 7
 558:	fd cf       	rjmp	.-6      	; 0x554 <i2c_start+0x4>
 55a:	91 b1       	in	r25, 0x01	; 1
 55c:	98 7f       	andi	r25, 0xF8	; 248
 55e:	98 30       	cpi	r25, 0x08	; 8
 560:	11 f0       	breq	.+4      	; 0x566 <i2c_start+0x16>
 562:	90 31       	cpi	r25, 0x10	; 16
 564:	79 f4       	brne	.+30     	; 0x584 <i2c_start+0x34>
 566:	83 b9       	out	0x03, r24	; 3
 568:	84 e8       	ldi	r24, 0x84	; 132
 56a:	86 bf       	out	0x36, r24	; 54
 56c:	06 b6       	in	r0, 0x36	; 54
 56e:	07 fe       	sbrs	r0, 7
 570:	fd cf       	rjmp	.-6      	; 0x56c <i2c_start+0x1c>
 572:	91 b1       	in	r25, 0x01	; 1
 574:	98 7f       	andi	r25, 0xF8	; 248
 576:	98 31       	cpi	r25, 0x18	; 24
 578:	39 f0       	breq	.+14     	; 0x588 <i2c_start+0x38>
 57a:	81 e0       	ldi	r24, 0x01	; 1
 57c:	90 34       	cpi	r25, 0x40	; 64
 57e:	29 f4       	brne	.+10     	; 0x58a <i2c_start+0x3a>
 580:	80 e0       	ldi	r24, 0x00	; 0
 582:	08 95       	ret
 584:	81 e0       	ldi	r24, 0x01	; 1
 586:	08 95       	ret
 588:	80 e0       	ldi	r24, 0x00	; 0
 58a:	08 95       	ret

0000058c <i2c_start_wait>:
 58c:	24 ea       	ldi	r18, 0xA4	; 164
 58e:	34 e8       	ldi	r19, 0x84	; 132
 590:	44 e9       	ldi	r20, 0x94	; 148
 592:	26 bf       	out	0x36, r18	; 54
 594:	06 b6       	in	r0, 0x36	; 54
 596:	07 fe       	sbrs	r0, 7
 598:	fd cf       	rjmp	.-6      	; 0x594 <i2c_start_wait+0x8>
 59a:	91 b1       	in	r25, 0x01	; 1
 59c:	98 7f       	andi	r25, 0xF8	; 248
 59e:	98 30       	cpi	r25, 0x08	; 8
 5a0:	11 f0       	breq	.+4      	; 0x5a6 <i2c_start_wait+0x1a>
 5a2:	90 31       	cpi	r25, 0x10	; 16
 5a4:	b1 f7       	brne	.-20     	; 0x592 <i2c_start_wait+0x6>
 5a6:	83 b9       	out	0x03, r24	; 3
 5a8:	36 bf       	out	0x36, r19	; 54
 5aa:	06 b6       	in	r0, 0x36	; 54
 5ac:	07 fe       	sbrs	r0, 7
 5ae:	fd cf       	rjmp	.-6      	; 0x5aa <i2c_start_wait+0x1e>
 5b0:	91 b1       	in	r25, 0x01	; 1
 5b2:	98 7f       	andi	r25, 0xF8	; 248
 5b4:	90 32       	cpi	r25, 0x20	; 32
 5b6:	11 f0       	breq	.+4      	; 0x5bc <i2c_start_wait+0x30>
 5b8:	98 35       	cpi	r25, 0x58	; 88
 5ba:	29 f4       	brne	.+10     	; 0x5c6 <i2c_start_wait+0x3a>
 5bc:	46 bf       	out	0x36, r20	; 54
 5be:	06 b6       	in	r0, 0x36	; 54
 5c0:	04 fc       	sbrc	r0, 4
 5c2:	fd cf       	rjmp	.-6      	; 0x5be <i2c_start_wait+0x32>
 5c4:	e6 cf       	rjmp	.-52     	; 0x592 <i2c_start_wait+0x6>
 5c6:	08 95       	ret

000005c8 <i2c_rep_start>:
 5c8:	0e 94 a8 02 	call	0x550	; 0x550 <i2c_start>
 5cc:	08 95       	ret

000005ce <i2c_stop>:
 5ce:	84 e9       	ldi	r24, 0x94	; 148
 5d0:	86 bf       	out	0x36, r24	; 54
 5d2:	06 b6       	in	r0, 0x36	; 54
 5d4:	04 fc       	sbrc	r0, 4
 5d6:	fd cf       	rjmp	.-6      	; 0x5d2 <i2c_stop+0x4>
 5d8:	08 95       	ret

000005da <i2c_write>:
 5da:	83 b9       	out	0x03, r24	; 3
 5dc:	84 e8       	ldi	r24, 0x84	; 132
 5de:	86 bf       	out	0x36, r24	; 54
 5e0:	06 b6       	in	r0, 0x36	; 54
 5e2:	07 fe       	sbrs	r0, 7
 5e4:	fd cf       	rjmp	.-6      	; 0x5e0 <i2c_write+0x6>
 5e6:	91 b1       	in	r25, 0x01	; 1
 5e8:	98 7f       	andi	r25, 0xF8	; 248
 5ea:	81 e0       	ldi	r24, 0x01	; 1
 5ec:	98 32       	cpi	r25, 0x28	; 40
 5ee:	09 f4       	brne	.+2      	; 0x5f2 <i2c_write+0x18>
 5f0:	80 e0       	ldi	r24, 0x00	; 0
 5f2:	08 95       	ret

000005f4 <i2c_readAck>:
 5f4:	84 ec       	ldi	r24, 0xC4	; 196
 5f6:	86 bf       	out	0x36, r24	; 54
 5f8:	06 b6       	in	r0, 0x36	; 54
 5fa:	07 fe       	sbrs	r0, 7
 5fc:	fd cf       	rjmp	.-6      	; 0x5f8 <i2c_readAck+0x4>
 5fe:	83 b1       	in	r24, 0x03	; 3
 600:	08 95       	ret

00000602 <i2c_readNak>:
 602:	84 e8       	ldi	r24, 0x84	; 132
 604:	86 bf       	out	0x36, r24	; 54
 606:	06 b6       	in	r0, 0x36	; 54
 608:	07 fe       	sbrs	r0, 7
 60a:	fd cf       	rjmp	.-6      	; 0x606 <i2c_readNak+0x4>
 60c:	83 b1       	in	r24, 0x03	; 3
 60e:	08 95       	ret

00000610 <__subsf3>:
 610:	50 58       	subi	r21, 0x80	; 128

00000612 <__addsf3>:
 612:	bb 27       	eor	r27, r27
 614:	aa 27       	eor	r26, r26
 616:	0e 94 20 03 	call	0x640	; 0x640 <__addsf3x>
 61a:	0c 94 71 04 	jmp	0x8e2	; 0x8e2 <__fp_round>
 61e:	0e 94 63 04 	call	0x8c6	; 0x8c6 <__fp_pscA>
 622:	38 f0       	brcs	.+14     	; 0x632 <__addsf3+0x20>
 624:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__fp_pscB>
 628:	20 f0       	brcs	.+8      	; 0x632 <__addsf3+0x20>
 62a:	39 f4       	brne	.+14     	; 0x63a <__addsf3+0x28>
 62c:	9f 3f       	cpi	r25, 0xFF	; 255
 62e:	19 f4       	brne	.+6      	; 0x636 <__addsf3+0x24>
 630:	26 f4       	brtc	.+8      	; 0x63a <__addsf3+0x28>
 632:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__fp_nan>
 636:	0e f4       	brtc	.+2      	; 0x63a <__addsf3+0x28>
 638:	e0 95       	com	r30
 63a:	e7 fb       	bst	r30, 7
 63c:	0c 94 5a 04 	jmp	0x8b4	; 0x8b4 <__fp_inf>

00000640 <__addsf3x>:
 640:	e9 2f       	mov	r30, r25
 642:	0e 94 82 04 	call	0x904	; 0x904 <__fp_split3>
 646:	58 f3       	brcs	.-42     	; 0x61e <__addsf3+0xc>
 648:	ba 17       	cp	r27, r26
 64a:	62 07       	cpc	r22, r18
 64c:	73 07       	cpc	r23, r19
 64e:	84 07       	cpc	r24, r20
 650:	95 07       	cpc	r25, r21
 652:	20 f0       	brcs	.+8      	; 0x65c <__addsf3x+0x1c>
 654:	79 f4       	brne	.+30     	; 0x674 <__addsf3x+0x34>
 656:	a6 f5       	brtc	.+104    	; 0x6c0 <__addsf3x+0x80>
 658:	0c 94 a4 04 	jmp	0x948	; 0x948 <__fp_zero>
 65c:	0e f4       	brtc	.+2      	; 0x660 <__addsf3x+0x20>
 65e:	e0 95       	com	r30
 660:	0b 2e       	mov	r0, r27
 662:	ba 2f       	mov	r27, r26
 664:	a0 2d       	mov	r26, r0
 666:	0b 01       	movw	r0, r22
 668:	b9 01       	movw	r22, r18
 66a:	90 01       	movw	r18, r0
 66c:	0c 01       	movw	r0, r24
 66e:	ca 01       	movw	r24, r20
 670:	a0 01       	movw	r20, r0
 672:	11 24       	eor	r1, r1
 674:	ff 27       	eor	r31, r31
 676:	59 1b       	sub	r21, r25
 678:	99 f0       	breq	.+38     	; 0x6a0 <__addsf3x+0x60>
 67a:	59 3f       	cpi	r21, 0xF9	; 249
 67c:	50 f4       	brcc	.+20     	; 0x692 <__addsf3x+0x52>
 67e:	50 3e       	cpi	r21, 0xE0	; 224
 680:	68 f1       	brcs	.+90     	; 0x6dc <__addsf3x+0x9c>
 682:	1a 16       	cp	r1, r26
 684:	f0 40       	sbci	r31, 0x00	; 0
 686:	a2 2f       	mov	r26, r18
 688:	23 2f       	mov	r18, r19
 68a:	34 2f       	mov	r19, r20
 68c:	44 27       	eor	r20, r20
 68e:	58 5f       	subi	r21, 0xF8	; 248
 690:	f3 cf       	rjmp	.-26     	; 0x678 <__addsf3x+0x38>
 692:	46 95       	lsr	r20
 694:	37 95       	ror	r19
 696:	27 95       	ror	r18
 698:	a7 95       	ror	r26
 69a:	f0 40       	sbci	r31, 0x00	; 0
 69c:	53 95       	inc	r21
 69e:	c9 f7       	brne	.-14     	; 0x692 <__addsf3x+0x52>
 6a0:	7e f4       	brtc	.+30     	; 0x6c0 <__addsf3x+0x80>
 6a2:	1f 16       	cp	r1, r31
 6a4:	ba 0b       	sbc	r27, r26
 6a6:	62 0b       	sbc	r22, r18
 6a8:	73 0b       	sbc	r23, r19
 6aa:	84 0b       	sbc	r24, r20
 6ac:	ba f0       	brmi	.+46     	; 0x6dc <__addsf3x+0x9c>
 6ae:	91 50       	subi	r25, 0x01	; 1
 6b0:	a1 f0       	breq	.+40     	; 0x6da <__addsf3x+0x9a>
 6b2:	ff 0f       	add	r31, r31
 6b4:	bb 1f       	adc	r27, r27
 6b6:	66 1f       	adc	r22, r22
 6b8:	77 1f       	adc	r23, r23
 6ba:	88 1f       	adc	r24, r24
 6bc:	c2 f7       	brpl	.-16     	; 0x6ae <__addsf3x+0x6e>
 6be:	0e c0       	rjmp	.+28     	; 0x6dc <__addsf3x+0x9c>
 6c0:	ba 0f       	add	r27, r26
 6c2:	62 1f       	adc	r22, r18
 6c4:	73 1f       	adc	r23, r19
 6c6:	84 1f       	adc	r24, r20
 6c8:	48 f4       	brcc	.+18     	; 0x6dc <__addsf3x+0x9c>
 6ca:	87 95       	ror	r24
 6cc:	77 95       	ror	r23
 6ce:	67 95       	ror	r22
 6d0:	b7 95       	ror	r27
 6d2:	f7 95       	ror	r31
 6d4:	9e 3f       	cpi	r25, 0xFE	; 254
 6d6:	08 f0       	brcs	.+2      	; 0x6da <__addsf3x+0x9a>
 6d8:	b0 cf       	rjmp	.-160    	; 0x63a <__addsf3+0x28>
 6da:	93 95       	inc	r25
 6dc:	88 0f       	add	r24, r24
 6de:	08 f0       	brcs	.+2      	; 0x6e2 <__addsf3x+0xa2>
 6e0:	99 27       	eor	r25, r25
 6e2:	ee 0f       	add	r30, r30
 6e4:	97 95       	ror	r25
 6e6:	87 95       	ror	r24
 6e8:	08 95       	ret

000006ea <__divsf3>:
 6ea:	0e 94 89 03 	call	0x712	; 0x712 <__divsf3x>
 6ee:	0c 94 71 04 	jmp	0x8e2	; 0x8e2 <__fp_round>
 6f2:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__fp_pscB>
 6f6:	58 f0       	brcs	.+22     	; 0x70e <__divsf3+0x24>
 6f8:	0e 94 63 04 	call	0x8c6	; 0x8c6 <__fp_pscA>
 6fc:	40 f0       	brcs	.+16     	; 0x70e <__divsf3+0x24>
 6fe:	29 f4       	brne	.+10     	; 0x70a <__divsf3+0x20>
 700:	5f 3f       	cpi	r21, 0xFF	; 255
 702:	29 f0       	breq	.+10     	; 0x70e <__divsf3+0x24>
 704:	0c 94 5a 04 	jmp	0x8b4	; 0x8b4 <__fp_inf>
 708:	51 11       	cpse	r21, r1
 70a:	0c 94 a5 04 	jmp	0x94a	; 0x94a <__fp_szero>
 70e:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__fp_nan>

00000712 <__divsf3x>:
 712:	0e 94 82 04 	call	0x904	; 0x904 <__fp_split3>
 716:	68 f3       	brcs	.-38     	; 0x6f2 <__divsf3+0x8>

00000718 <__divsf3_pse>:
 718:	99 23       	and	r25, r25
 71a:	b1 f3       	breq	.-20     	; 0x708 <__divsf3+0x1e>
 71c:	55 23       	and	r21, r21
 71e:	91 f3       	breq	.-28     	; 0x704 <__divsf3+0x1a>
 720:	95 1b       	sub	r25, r21
 722:	55 0b       	sbc	r21, r21
 724:	bb 27       	eor	r27, r27
 726:	aa 27       	eor	r26, r26
 728:	62 17       	cp	r22, r18
 72a:	73 07       	cpc	r23, r19
 72c:	84 07       	cpc	r24, r20
 72e:	38 f0       	brcs	.+14     	; 0x73e <__divsf3_pse+0x26>
 730:	9f 5f       	subi	r25, 0xFF	; 255
 732:	5f 4f       	sbci	r21, 0xFF	; 255
 734:	22 0f       	add	r18, r18
 736:	33 1f       	adc	r19, r19
 738:	44 1f       	adc	r20, r20
 73a:	aa 1f       	adc	r26, r26
 73c:	a9 f3       	breq	.-22     	; 0x728 <__divsf3_pse+0x10>
 73e:	35 d0       	rcall	.+106    	; 0x7aa <__divsf3_pse+0x92>
 740:	0e 2e       	mov	r0, r30
 742:	3a f0       	brmi	.+14     	; 0x752 <__divsf3_pse+0x3a>
 744:	e0 e8       	ldi	r30, 0x80	; 128
 746:	32 d0       	rcall	.+100    	; 0x7ac <__divsf3_pse+0x94>
 748:	91 50       	subi	r25, 0x01	; 1
 74a:	50 40       	sbci	r21, 0x00	; 0
 74c:	e6 95       	lsr	r30
 74e:	00 1c       	adc	r0, r0
 750:	ca f7       	brpl	.-14     	; 0x744 <__divsf3_pse+0x2c>
 752:	2b d0       	rcall	.+86     	; 0x7aa <__divsf3_pse+0x92>
 754:	fe 2f       	mov	r31, r30
 756:	29 d0       	rcall	.+82     	; 0x7aa <__divsf3_pse+0x92>
 758:	66 0f       	add	r22, r22
 75a:	77 1f       	adc	r23, r23
 75c:	88 1f       	adc	r24, r24
 75e:	bb 1f       	adc	r27, r27
 760:	26 17       	cp	r18, r22
 762:	37 07       	cpc	r19, r23
 764:	48 07       	cpc	r20, r24
 766:	ab 07       	cpc	r26, r27
 768:	b0 e8       	ldi	r27, 0x80	; 128
 76a:	09 f0       	breq	.+2      	; 0x76e <__divsf3_pse+0x56>
 76c:	bb 0b       	sbc	r27, r27
 76e:	80 2d       	mov	r24, r0
 770:	bf 01       	movw	r22, r30
 772:	ff 27       	eor	r31, r31
 774:	93 58       	subi	r25, 0x83	; 131
 776:	5f 4f       	sbci	r21, 0xFF	; 255
 778:	3a f0       	brmi	.+14     	; 0x788 <__divsf3_pse+0x70>
 77a:	9e 3f       	cpi	r25, 0xFE	; 254
 77c:	51 05       	cpc	r21, r1
 77e:	78 f0       	brcs	.+30     	; 0x79e <__divsf3_pse+0x86>
 780:	0c 94 5a 04 	jmp	0x8b4	; 0x8b4 <__fp_inf>
 784:	0c 94 a5 04 	jmp	0x94a	; 0x94a <__fp_szero>
 788:	5f 3f       	cpi	r21, 0xFF	; 255
 78a:	e4 f3       	brlt	.-8      	; 0x784 <__divsf3_pse+0x6c>
 78c:	98 3e       	cpi	r25, 0xE8	; 232
 78e:	d4 f3       	brlt	.-12     	; 0x784 <__divsf3_pse+0x6c>
 790:	86 95       	lsr	r24
 792:	77 95       	ror	r23
 794:	67 95       	ror	r22
 796:	b7 95       	ror	r27
 798:	f7 95       	ror	r31
 79a:	9f 5f       	subi	r25, 0xFF	; 255
 79c:	c9 f7       	brne	.-14     	; 0x790 <__divsf3_pse+0x78>
 79e:	88 0f       	add	r24, r24
 7a0:	91 1d       	adc	r25, r1
 7a2:	96 95       	lsr	r25
 7a4:	87 95       	ror	r24
 7a6:	97 f9       	bld	r25, 7
 7a8:	08 95       	ret
 7aa:	e1 e0       	ldi	r30, 0x01	; 1
 7ac:	66 0f       	add	r22, r22
 7ae:	77 1f       	adc	r23, r23
 7b0:	88 1f       	adc	r24, r24
 7b2:	bb 1f       	adc	r27, r27
 7b4:	62 17       	cp	r22, r18
 7b6:	73 07       	cpc	r23, r19
 7b8:	84 07       	cpc	r24, r20
 7ba:	ba 07       	cpc	r27, r26
 7bc:	20 f0       	brcs	.+8      	; 0x7c6 <__divsf3_pse+0xae>
 7be:	62 1b       	sub	r22, r18
 7c0:	73 0b       	sbc	r23, r19
 7c2:	84 0b       	sbc	r24, r20
 7c4:	ba 0b       	sbc	r27, r26
 7c6:	ee 1f       	adc	r30, r30
 7c8:	88 f7       	brcc	.-30     	; 0x7ac <__divsf3_pse+0x94>
 7ca:	e0 95       	com	r30
 7cc:	08 95       	ret

000007ce <__fixsfsi>:
 7ce:	0e 94 ee 03 	call	0x7dc	; 0x7dc <__fixunssfsi>
 7d2:	68 94       	set
 7d4:	b1 11       	cpse	r27, r1
 7d6:	0c 94 a5 04 	jmp	0x94a	; 0x94a <__fp_szero>
 7da:	08 95       	ret

000007dc <__fixunssfsi>:
 7dc:	0e 94 8a 04 	call	0x914	; 0x914 <__fp_splitA>
 7e0:	88 f0       	brcs	.+34     	; 0x804 <__fixunssfsi+0x28>
 7e2:	9f 57       	subi	r25, 0x7F	; 127
 7e4:	98 f0       	brcs	.+38     	; 0x80c <__fixunssfsi+0x30>
 7e6:	b9 2f       	mov	r27, r25
 7e8:	99 27       	eor	r25, r25
 7ea:	b7 51       	subi	r27, 0x17	; 23
 7ec:	b0 f0       	brcs	.+44     	; 0x81a <__fixunssfsi+0x3e>
 7ee:	e1 f0       	breq	.+56     	; 0x828 <__fixunssfsi+0x4c>
 7f0:	66 0f       	add	r22, r22
 7f2:	77 1f       	adc	r23, r23
 7f4:	88 1f       	adc	r24, r24
 7f6:	99 1f       	adc	r25, r25
 7f8:	1a f0       	brmi	.+6      	; 0x800 <__fixunssfsi+0x24>
 7fa:	ba 95       	dec	r27
 7fc:	c9 f7       	brne	.-14     	; 0x7f0 <__fixunssfsi+0x14>
 7fe:	14 c0       	rjmp	.+40     	; 0x828 <__fixunssfsi+0x4c>
 800:	b1 30       	cpi	r27, 0x01	; 1
 802:	91 f0       	breq	.+36     	; 0x828 <__fixunssfsi+0x4c>
 804:	0e 94 a4 04 	call	0x948	; 0x948 <__fp_zero>
 808:	b1 e0       	ldi	r27, 0x01	; 1
 80a:	08 95       	ret
 80c:	0c 94 a4 04 	jmp	0x948	; 0x948 <__fp_zero>
 810:	67 2f       	mov	r22, r23
 812:	78 2f       	mov	r23, r24
 814:	88 27       	eor	r24, r24
 816:	b8 5f       	subi	r27, 0xF8	; 248
 818:	39 f0       	breq	.+14     	; 0x828 <__fixunssfsi+0x4c>
 81a:	b9 3f       	cpi	r27, 0xF9	; 249
 81c:	cc f3       	brlt	.-14     	; 0x810 <__fixunssfsi+0x34>
 81e:	86 95       	lsr	r24
 820:	77 95       	ror	r23
 822:	67 95       	ror	r22
 824:	b3 95       	inc	r27
 826:	d9 f7       	brne	.-10     	; 0x81e <__fixunssfsi+0x42>
 828:	3e f4       	brtc	.+14     	; 0x838 <__fixunssfsi+0x5c>
 82a:	90 95       	com	r25
 82c:	80 95       	com	r24
 82e:	70 95       	com	r23
 830:	61 95       	neg	r22
 832:	7f 4f       	sbci	r23, 0xFF	; 255
 834:	8f 4f       	sbci	r24, 0xFF	; 255
 836:	9f 4f       	sbci	r25, 0xFF	; 255
 838:	08 95       	ret

0000083a <__floatunsisf>:
 83a:	e8 94       	clt
 83c:	09 c0       	rjmp	.+18     	; 0x850 <__floatsisf+0x12>

0000083e <__floatsisf>:
 83e:	97 fb       	bst	r25, 7
 840:	3e f4       	brtc	.+14     	; 0x850 <__floatsisf+0x12>
 842:	90 95       	com	r25
 844:	80 95       	com	r24
 846:	70 95       	com	r23
 848:	61 95       	neg	r22
 84a:	7f 4f       	sbci	r23, 0xFF	; 255
 84c:	8f 4f       	sbci	r24, 0xFF	; 255
 84e:	9f 4f       	sbci	r25, 0xFF	; 255
 850:	99 23       	and	r25, r25
 852:	a9 f0       	breq	.+42     	; 0x87e <__stack+0x1f>
 854:	f9 2f       	mov	r31, r25
 856:	96 e9       	ldi	r25, 0x96	; 150
 858:	bb 27       	eor	r27, r27
 85a:	93 95       	inc	r25
 85c:	f6 95       	lsr	r31
 85e:	87 95       	ror	r24
 860:	77 95       	ror	r23
 862:	67 95       	ror	r22
 864:	b7 95       	ror	r27
 866:	f1 11       	cpse	r31, r1
 868:	f8 cf       	rjmp	.-16     	; 0x85a <__floatsisf+0x1c>
 86a:	fa f4       	brpl	.+62     	; 0x8aa <__stack+0x4b>
 86c:	bb 0f       	add	r27, r27
 86e:	11 f4       	brne	.+4      	; 0x874 <__stack+0x15>
 870:	60 ff       	sbrs	r22, 0
 872:	1b c0       	rjmp	.+54     	; 0x8aa <__stack+0x4b>
 874:	6f 5f       	subi	r22, 0xFF	; 255
 876:	7f 4f       	sbci	r23, 0xFF	; 255
 878:	8f 4f       	sbci	r24, 0xFF	; 255
 87a:	9f 4f       	sbci	r25, 0xFF	; 255
 87c:	16 c0       	rjmp	.+44     	; 0x8aa <__stack+0x4b>
 87e:	88 23       	and	r24, r24
 880:	11 f0       	breq	.+4      	; 0x886 <__stack+0x27>
 882:	96 e9       	ldi	r25, 0x96	; 150
 884:	11 c0       	rjmp	.+34     	; 0x8a8 <__stack+0x49>
 886:	77 23       	and	r23, r23
 888:	21 f0       	breq	.+8      	; 0x892 <__stack+0x33>
 88a:	9e e8       	ldi	r25, 0x8E	; 142
 88c:	87 2f       	mov	r24, r23
 88e:	76 2f       	mov	r23, r22
 890:	05 c0       	rjmp	.+10     	; 0x89c <__stack+0x3d>
 892:	66 23       	and	r22, r22
 894:	71 f0       	breq	.+28     	; 0x8b2 <__stack+0x53>
 896:	96 e8       	ldi	r25, 0x86	; 134
 898:	86 2f       	mov	r24, r22
 89a:	70 e0       	ldi	r23, 0x00	; 0
 89c:	60 e0       	ldi	r22, 0x00	; 0
 89e:	2a f0       	brmi	.+10     	; 0x8aa <__stack+0x4b>
 8a0:	9a 95       	dec	r25
 8a2:	66 0f       	add	r22, r22
 8a4:	77 1f       	adc	r23, r23
 8a6:	88 1f       	adc	r24, r24
 8a8:	da f7       	brpl	.-10     	; 0x8a0 <__stack+0x41>
 8aa:	88 0f       	add	r24, r24
 8ac:	96 95       	lsr	r25
 8ae:	87 95       	ror	r24
 8b0:	97 f9       	bld	r25, 7
 8b2:	08 95       	ret

000008b4 <__fp_inf>:
 8b4:	97 f9       	bld	r25, 7
 8b6:	9f 67       	ori	r25, 0x7F	; 127
 8b8:	80 e8       	ldi	r24, 0x80	; 128
 8ba:	70 e0       	ldi	r23, 0x00	; 0
 8bc:	60 e0       	ldi	r22, 0x00	; 0
 8be:	08 95       	ret

000008c0 <__fp_nan>:
 8c0:	9f ef       	ldi	r25, 0xFF	; 255
 8c2:	80 ec       	ldi	r24, 0xC0	; 192
 8c4:	08 95       	ret

000008c6 <__fp_pscA>:
 8c6:	00 24       	eor	r0, r0
 8c8:	0a 94       	dec	r0
 8ca:	16 16       	cp	r1, r22
 8cc:	17 06       	cpc	r1, r23
 8ce:	18 06       	cpc	r1, r24
 8d0:	09 06       	cpc	r0, r25
 8d2:	08 95       	ret

000008d4 <__fp_pscB>:
 8d4:	00 24       	eor	r0, r0
 8d6:	0a 94       	dec	r0
 8d8:	12 16       	cp	r1, r18
 8da:	13 06       	cpc	r1, r19
 8dc:	14 06       	cpc	r1, r20
 8de:	05 06       	cpc	r0, r21
 8e0:	08 95       	ret

000008e2 <__fp_round>:
 8e2:	09 2e       	mov	r0, r25
 8e4:	03 94       	inc	r0
 8e6:	00 0c       	add	r0, r0
 8e8:	11 f4       	brne	.+4      	; 0x8ee <__fp_round+0xc>
 8ea:	88 23       	and	r24, r24
 8ec:	52 f0       	brmi	.+20     	; 0x902 <__fp_round+0x20>
 8ee:	bb 0f       	add	r27, r27
 8f0:	40 f4       	brcc	.+16     	; 0x902 <__fp_round+0x20>
 8f2:	bf 2b       	or	r27, r31
 8f4:	11 f4       	brne	.+4      	; 0x8fa <__fp_round+0x18>
 8f6:	60 ff       	sbrs	r22, 0
 8f8:	04 c0       	rjmp	.+8      	; 0x902 <__fp_round+0x20>
 8fa:	6f 5f       	subi	r22, 0xFF	; 255
 8fc:	7f 4f       	sbci	r23, 0xFF	; 255
 8fe:	8f 4f       	sbci	r24, 0xFF	; 255
 900:	9f 4f       	sbci	r25, 0xFF	; 255
 902:	08 95       	ret

00000904 <__fp_split3>:
 904:	57 fd       	sbrc	r21, 7
 906:	90 58       	subi	r25, 0x80	; 128
 908:	44 0f       	add	r20, r20
 90a:	55 1f       	adc	r21, r21
 90c:	59 f0       	breq	.+22     	; 0x924 <__fp_splitA+0x10>
 90e:	5f 3f       	cpi	r21, 0xFF	; 255
 910:	71 f0       	breq	.+28     	; 0x92e <__fp_splitA+0x1a>
 912:	47 95       	ror	r20

00000914 <__fp_splitA>:
 914:	88 0f       	add	r24, r24
 916:	97 fb       	bst	r25, 7
 918:	99 1f       	adc	r25, r25
 91a:	61 f0       	breq	.+24     	; 0x934 <__fp_splitA+0x20>
 91c:	9f 3f       	cpi	r25, 0xFF	; 255
 91e:	79 f0       	breq	.+30     	; 0x93e <__fp_splitA+0x2a>
 920:	87 95       	ror	r24
 922:	08 95       	ret
 924:	12 16       	cp	r1, r18
 926:	13 06       	cpc	r1, r19
 928:	14 06       	cpc	r1, r20
 92a:	55 1f       	adc	r21, r21
 92c:	f2 cf       	rjmp	.-28     	; 0x912 <__fp_split3+0xe>
 92e:	46 95       	lsr	r20
 930:	f1 df       	rcall	.-30     	; 0x914 <__fp_splitA>
 932:	08 c0       	rjmp	.+16     	; 0x944 <__fp_splitA+0x30>
 934:	16 16       	cp	r1, r22
 936:	17 06       	cpc	r1, r23
 938:	18 06       	cpc	r1, r24
 93a:	99 1f       	adc	r25, r25
 93c:	f1 cf       	rjmp	.-30     	; 0x920 <__fp_splitA+0xc>
 93e:	86 95       	lsr	r24
 940:	71 05       	cpc	r23, r1
 942:	61 05       	cpc	r22, r1
 944:	08 94       	sec
 946:	08 95       	ret

00000948 <__fp_zero>:
 948:	e8 94       	clt

0000094a <__fp_szero>:
 94a:	bb 27       	eor	r27, r27
 94c:	66 27       	eor	r22, r22
 94e:	77 27       	eor	r23, r23
 950:	cb 01       	movw	r24, r22
 952:	97 f9       	bld	r25, 7
 954:	08 95       	ret

00000956 <__mulsf3>:
 956:	0e 94 be 04 	call	0x97c	; 0x97c <__mulsf3x>
 95a:	0c 94 71 04 	jmp	0x8e2	; 0x8e2 <__fp_round>
 95e:	0e 94 63 04 	call	0x8c6	; 0x8c6 <__fp_pscA>
 962:	38 f0       	brcs	.+14     	; 0x972 <__mulsf3+0x1c>
 964:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__fp_pscB>
 968:	20 f0       	brcs	.+8      	; 0x972 <__mulsf3+0x1c>
 96a:	95 23       	and	r25, r21
 96c:	11 f0       	breq	.+4      	; 0x972 <__mulsf3+0x1c>
 96e:	0c 94 5a 04 	jmp	0x8b4	; 0x8b4 <__fp_inf>
 972:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__fp_nan>
 976:	11 24       	eor	r1, r1
 978:	0c 94 a5 04 	jmp	0x94a	; 0x94a <__fp_szero>

0000097c <__mulsf3x>:
 97c:	0e 94 82 04 	call	0x904	; 0x904 <__fp_split3>
 980:	70 f3       	brcs	.-36     	; 0x95e <__mulsf3+0x8>

00000982 <__mulsf3_pse>:
 982:	95 9f       	mul	r25, r21
 984:	c1 f3       	breq	.-16     	; 0x976 <__mulsf3+0x20>
 986:	95 0f       	add	r25, r21
 988:	50 e0       	ldi	r21, 0x00	; 0
 98a:	55 1f       	adc	r21, r21
 98c:	62 9f       	mul	r22, r18
 98e:	f0 01       	movw	r30, r0
 990:	72 9f       	mul	r23, r18
 992:	bb 27       	eor	r27, r27
 994:	f0 0d       	add	r31, r0
 996:	b1 1d       	adc	r27, r1
 998:	63 9f       	mul	r22, r19
 99a:	aa 27       	eor	r26, r26
 99c:	f0 0d       	add	r31, r0
 99e:	b1 1d       	adc	r27, r1
 9a0:	aa 1f       	adc	r26, r26
 9a2:	64 9f       	mul	r22, r20
 9a4:	66 27       	eor	r22, r22
 9a6:	b0 0d       	add	r27, r0
 9a8:	a1 1d       	adc	r26, r1
 9aa:	66 1f       	adc	r22, r22
 9ac:	82 9f       	mul	r24, r18
 9ae:	22 27       	eor	r18, r18
 9b0:	b0 0d       	add	r27, r0
 9b2:	a1 1d       	adc	r26, r1
 9b4:	62 1f       	adc	r22, r18
 9b6:	73 9f       	mul	r23, r19
 9b8:	b0 0d       	add	r27, r0
 9ba:	a1 1d       	adc	r26, r1
 9bc:	62 1f       	adc	r22, r18
 9be:	83 9f       	mul	r24, r19
 9c0:	a0 0d       	add	r26, r0
 9c2:	61 1d       	adc	r22, r1
 9c4:	22 1f       	adc	r18, r18
 9c6:	74 9f       	mul	r23, r20
 9c8:	33 27       	eor	r19, r19
 9ca:	a0 0d       	add	r26, r0
 9cc:	61 1d       	adc	r22, r1
 9ce:	23 1f       	adc	r18, r19
 9d0:	84 9f       	mul	r24, r20
 9d2:	60 0d       	add	r22, r0
 9d4:	21 1d       	adc	r18, r1
 9d6:	82 2f       	mov	r24, r18
 9d8:	76 2f       	mov	r23, r22
 9da:	6a 2f       	mov	r22, r26
 9dc:	11 24       	eor	r1, r1
 9de:	9f 57       	subi	r25, 0x7F	; 127
 9e0:	50 40       	sbci	r21, 0x00	; 0
 9e2:	9a f0       	brmi	.+38     	; 0xa0a <__mulsf3_pse+0x88>
 9e4:	f1 f0       	breq	.+60     	; 0xa22 <__mulsf3_pse+0xa0>
 9e6:	88 23       	and	r24, r24
 9e8:	4a f0       	brmi	.+18     	; 0x9fc <__mulsf3_pse+0x7a>
 9ea:	ee 0f       	add	r30, r30
 9ec:	ff 1f       	adc	r31, r31
 9ee:	bb 1f       	adc	r27, r27
 9f0:	66 1f       	adc	r22, r22
 9f2:	77 1f       	adc	r23, r23
 9f4:	88 1f       	adc	r24, r24
 9f6:	91 50       	subi	r25, 0x01	; 1
 9f8:	50 40       	sbci	r21, 0x00	; 0
 9fa:	a9 f7       	brne	.-22     	; 0x9e6 <__mulsf3_pse+0x64>
 9fc:	9e 3f       	cpi	r25, 0xFE	; 254
 9fe:	51 05       	cpc	r21, r1
 a00:	80 f0       	brcs	.+32     	; 0xa22 <__mulsf3_pse+0xa0>
 a02:	0c 94 5a 04 	jmp	0x8b4	; 0x8b4 <__fp_inf>
 a06:	0c 94 a5 04 	jmp	0x94a	; 0x94a <__fp_szero>
 a0a:	5f 3f       	cpi	r21, 0xFF	; 255
 a0c:	e4 f3       	brlt	.-8      	; 0xa06 <__mulsf3_pse+0x84>
 a0e:	98 3e       	cpi	r25, 0xE8	; 232
 a10:	d4 f3       	brlt	.-12     	; 0xa06 <__mulsf3_pse+0x84>
 a12:	86 95       	lsr	r24
 a14:	77 95       	ror	r23
 a16:	67 95       	ror	r22
 a18:	b7 95       	ror	r27
 a1a:	f7 95       	ror	r31
 a1c:	e7 95       	ror	r30
 a1e:	9f 5f       	subi	r25, 0xFF	; 255
 a20:	c1 f7       	brne	.-16     	; 0xa12 <__mulsf3_pse+0x90>
 a22:	fe 2b       	or	r31, r30
 a24:	88 0f       	add	r24, r24
 a26:	91 1d       	adc	r25, r1
 a28:	96 95       	lsr	r25
 a2a:	87 95       	ror	r24
 a2c:	97 f9       	bld	r25, 7
 a2e:	08 95       	ret

00000a30 <__divmodhi4>:
 a30:	97 fb       	bst	r25, 7
 a32:	07 2e       	mov	r0, r23
 a34:	16 f4       	brtc	.+4      	; 0xa3a <__divmodhi4+0xa>
 a36:	00 94       	com	r0
 a38:	07 d0       	rcall	.+14     	; 0xa48 <__divmodhi4_neg1>
 a3a:	77 fd       	sbrc	r23, 7
 a3c:	09 d0       	rcall	.+18     	; 0xa50 <__divmodhi4_neg2>
 a3e:	0e 94 2c 05 	call	0xa58	; 0xa58 <__udivmodhi4>
 a42:	07 fc       	sbrc	r0, 7
 a44:	05 d0       	rcall	.+10     	; 0xa50 <__divmodhi4_neg2>
 a46:	3e f4       	brtc	.+14     	; 0xa56 <__divmodhi4_exit>

00000a48 <__divmodhi4_neg1>:
 a48:	90 95       	com	r25
 a4a:	81 95       	neg	r24
 a4c:	9f 4f       	sbci	r25, 0xFF	; 255
 a4e:	08 95       	ret

00000a50 <__divmodhi4_neg2>:
 a50:	70 95       	com	r23
 a52:	61 95       	neg	r22
 a54:	7f 4f       	sbci	r23, 0xFF	; 255

00000a56 <__divmodhi4_exit>:
 a56:	08 95       	ret

00000a58 <__udivmodhi4>:
 a58:	aa 1b       	sub	r26, r26
 a5a:	bb 1b       	sub	r27, r27
 a5c:	51 e1       	ldi	r21, 0x11	; 17
 a5e:	07 c0       	rjmp	.+14     	; 0xa6e <__udivmodhi4_ep>

00000a60 <__udivmodhi4_loop>:
 a60:	aa 1f       	adc	r26, r26
 a62:	bb 1f       	adc	r27, r27
 a64:	a6 17       	cp	r26, r22
 a66:	b7 07       	cpc	r27, r23
 a68:	10 f0       	brcs	.+4      	; 0xa6e <__udivmodhi4_ep>
 a6a:	a6 1b       	sub	r26, r22
 a6c:	b7 0b       	sbc	r27, r23

00000a6e <__udivmodhi4_ep>:
 a6e:	88 1f       	adc	r24, r24
 a70:	99 1f       	adc	r25, r25
 a72:	5a 95       	dec	r21
 a74:	a9 f7       	brne	.-22     	; 0xa60 <__udivmodhi4_loop>
 a76:	80 95       	com	r24
 a78:	90 95       	com	r25
 a7a:	bc 01       	movw	r22, r24
 a7c:	cd 01       	movw	r24, r26
 a7e:	08 95       	ret

00000a80 <strcpy>:
 a80:	fb 01       	movw	r30, r22
 a82:	dc 01       	movw	r26, r24
 a84:	01 90       	ld	r0, Z+
 a86:	0d 92       	st	X+, r0
 a88:	00 20       	and	r0, r0
 a8a:	e1 f7       	brne	.-8      	; 0xa84 <strcpy+0x4>
 a8c:	08 95       	ret

00000a8e <__itoa_ncheck>:
 a8e:	bb 27       	eor	r27, r27
 a90:	4a 30       	cpi	r20, 0x0A	; 10
 a92:	31 f4       	brne	.+12     	; 0xaa0 <__itoa_ncheck+0x12>
 a94:	99 23       	and	r25, r25
 a96:	22 f4       	brpl	.+8      	; 0xaa0 <__itoa_ncheck+0x12>
 a98:	bd e2       	ldi	r27, 0x2D	; 45
 a9a:	90 95       	com	r25
 a9c:	81 95       	neg	r24
 a9e:	9f 4f       	sbci	r25, 0xFF	; 255
 aa0:	0c 94 53 05 	jmp	0xaa6	; 0xaa6 <__utoa_common>

00000aa4 <__utoa_ncheck>:
 aa4:	bb 27       	eor	r27, r27

00000aa6 <__utoa_common>:
 aa6:	fb 01       	movw	r30, r22
 aa8:	55 27       	eor	r21, r21
 aaa:	aa 27       	eor	r26, r26
 aac:	88 0f       	add	r24, r24
 aae:	99 1f       	adc	r25, r25
 ab0:	aa 1f       	adc	r26, r26
 ab2:	a4 17       	cp	r26, r20
 ab4:	10 f0       	brcs	.+4      	; 0xaba <__utoa_common+0x14>
 ab6:	a4 1b       	sub	r26, r20
 ab8:	83 95       	inc	r24
 aba:	50 51       	subi	r21, 0x10	; 16
 abc:	b9 f7       	brne	.-18     	; 0xaac <__utoa_common+0x6>
 abe:	a0 5d       	subi	r26, 0xD0	; 208
 ac0:	aa 33       	cpi	r26, 0x3A	; 58
 ac2:	08 f0       	brcs	.+2      	; 0xac6 <__utoa_common+0x20>
 ac4:	a9 5d       	subi	r26, 0xD9	; 217
 ac6:	a1 93       	st	Z+, r26
 ac8:	00 97       	sbiw	r24, 0x00	; 0
 aca:	79 f7       	brne	.-34     	; 0xaaa <__utoa_common+0x4>
 acc:	b1 11       	cpse	r27, r1
 ace:	b1 93       	st	Z+, r27
 ad0:	11 92       	st	Z+, r1
 ad2:	cb 01       	movw	r24, r22
 ad4:	0c 94 6c 05 	jmp	0xad8	; 0xad8 <strrev>

00000ad8 <strrev>:
 ad8:	dc 01       	movw	r26, r24
 ada:	fc 01       	movw	r30, r24
 adc:	67 2f       	mov	r22, r23
 ade:	71 91       	ld	r23, Z+
 ae0:	77 23       	and	r23, r23
 ae2:	e1 f7       	brne	.-8      	; 0xadc <strrev+0x4>
 ae4:	32 97       	sbiw	r30, 0x02	; 2
 ae6:	04 c0       	rjmp	.+8      	; 0xaf0 <strrev+0x18>
 ae8:	7c 91       	ld	r23, X
 aea:	6d 93       	st	X+, r22
 aec:	70 83       	st	Z, r23
 aee:	62 91       	ld	r22, -Z
 af0:	ae 17       	cp	r26, r30
 af2:	bf 07       	cpc	r27, r31
 af4:	c8 f3       	brcs	.-14     	; 0xae8 <strrev+0x10>
 af6:	08 95       	ret

00000af8 <_exit>:
 af8:	f8 94       	cli

00000afa <__stop_program>:
 afa:	ff cf       	rjmp	.-2      	; 0xafa <__stop_program>
